{"tables":{"basicrelationships":{"basicrelationships":{"count":16,"lastPrimaryKey":20,"index":{"1":{"hasMany":{"basicrelationships.inverseId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"basicrelationships.inverseId":[1],"inputs.relationshipId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"basicrelationships.inverseId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"basicrelationships.inverseId":[5],"inputs.relationshipId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"basicrelationships.inverseId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"basicrelationships.inverseId":[7],"inputs.relationshipId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"basicrelationships.inverseId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"basicrelationships.inverseId":[11],"inputs.relationshipId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.inverseId":[14],"inputs.relationshipId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{"basicrelationships.inverseId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"basicrelationships.inverseId":[16],"inputs.relationshipId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"basicrelationships.inverseId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"17":{"hasMany":{"basicrelationships.inverseId":[18],"inputs.relationshipId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"18":{"hasMany":{"basicrelationships.inverseId":[17]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"19":{"hasMany":{"basicrelationships.inverseId":[20],"inputs.relationshipId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"20":{"hasMany":{"basicrelationships.inverseId":[19]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_2":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":1,"inverseId":1,"localModelId":2,"parentKeyId":2,"foreignKeyId":8,"name":"user","type":"belongsTo","foreignOriginalName":"user_id","hasApi":true,"defaultName":"user","usingFirstDefaultName":true,"id":2,"createdAt":"2023-04-18 13:43:58","updatedAt":"2023-04-18 13:52:41"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":2,"inverseId":2,"localModelId":1,"parentKeyId":2,"foreignKeyId":8,"name":"agendamentos","type":"hasMany","foreignOriginalName":"user_id","hasApi":true,"defaultName":"agendamentos","usingFirstDefaultName":true,"id":1,"createdAt":"2023-04-18 13:43:58","updatedAt":"2023-04-18 13:52:41"},"item_6":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":5,"inverseId":5,"localModelId":2,"parentKeyId":16,"foreignKeyId":23,"name":"servico","type":"belongsTo","foreignOriginalName":"servico_id","hasApi":true,"defaultName":"servico","usingFirstDefaultName":true,"id":6,"createdAt":"2023-04-18 13:49:33","updatedAt":"2023-04-18 13:52:56"},"item_5":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":2,"inverseId":6,"localModelId":5,"parentKeyId":16,"foreignKeyId":23,"name":"agendamentos","type":"hasMany","foreignOriginalName":"servico_id","hasApi":true,"defaultName":"agendamentos","usingFirstDefaultName":true,"id":5,"createdAt":"2023-04-18 13:49:33","updatedAt":"2023-04-18 13:52:56"},"item_8":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":4,"inverseId":7,"localModelId":2,"parentKeyId":13,"foreignKeyId":24,"name":"unidade","type":"belongsTo","foreignOriginalName":"unidade_id","hasApi":true,"defaultName":"unidade","usingFirstDefaultName":true,"id":8,"createdAt":"2023-04-18 13:49:42","updatedAt":"2023-04-18 13:53:01"},"item_7":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":2,"inverseId":8,"localModelId":4,"parentKeyId":13,"foreignKeyId":24,"name":"agendamentos","type":"hasMany","foreignOriginalName":"unidade_id","hasApi":true,"defaultName":"agendamentos","usingFirstDefaultName":true,"id":7,"createdAt":"2023-04-18 13:49:42","updatedAt":"2023-04-18 13:53:01"},"item_12":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":7,"inverseId":11,"localModelId":2,"parentKeyId":36,"foreignKeyId":38,"name":"date","type":"belongsTo","foreignOriginalName":"date_id","hasApi":true,"defaultName":"date","usingFirstDefaultName":true,"id":12,"createdAt":"2023-04-18 13:54:30","updatedAt":"2023-04-18 13:54:34"},"item_11":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"modelId":2,"inverseId":12,"localModelId":7,"parentKeyId":36,"foreignKeyId":38,"name":"agendamentos","type":"hasMany","foreignOriginalName":"date_id","hasApi":true,"defaultName":"agendamentos","usingFirstDefaultName":true,"id":11,"createdAt":"2023-04-18 13:54:30","updatedAt":"2023-04-18 13:54:34"}},"cruds":{"cruds":{"count":4,"lastPrimaryKey":4,"index":{"1":{"hasMany":{"inputs.crudId":[1,2,3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"inputs.crudId":[4,5,6,7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.crudId":[12,13,14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"inputs.crudId":[11,9,10,8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Users","url":"users","modelId":1,"projectId":1,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Users List","create":"Create User","edit":"Edit User","update":"Update User","show":"Show User","new":"New User"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":1,"createdAt":"2023-04-18 13:54:48","updatedAt":"2023-04-18 13:54:48"},"item_2":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Agendamentos","url":"agendamentos","modelId":2,"projectId":1,"hasManyDetailId":null,"manyToManyDetailId":null,"titles":{"index":"Agendamentos List","create":"Create Agendamento","edit":"Edit Agendamento","update":"Update Agendamento","show":"Show Agendamento","new":"New Agendamento"},"hasApi":true,"isHasManyDetail":false,"isManyToManyDetail":false,"isForLivewire":false,"id":2,"createdAt":"2023-04-18 13:54:57","updatedAt":"2023-04-18 13:54:57"}},"entities":{"entities":{"count":12,"lastPrimaryKey":13,"index":{"1":{"hasMany":{"fields.entityId":[1,2,3,4,5,6],"projects.authModelId":[1],"foreigns.relatedEntityId":[1],"basicrelationships.localModelId":[1],"basicrelationships.modelId":[2],"cruds.modelId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"fields.entityId":[7,8,23,24,38],"basicrelationships.modelId":[1,5,7,11],"basicrelationships.localModelId":[2,6,8,12],"foreigns.relatedEntityId":[],"cruds.modelId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{"fields.entityId":[12,13,14],"basicrelationships.localModelId":[7],"basicrelationships.modelId":[8],"foreigns.relatedEntityId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"fields.entityId":[15,16],"foreigns.relatedEntityId":[3],"basicrelationships.localModelId":[5],"basicrelationships.modelId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{"fields.entityId":[25,26,28],"foreigns.relatedEntityId":[],"basicrelationships.localModelId":[],"basicrelationships.modelId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"fields.entityId":[34,36],"foreigns.relatedEntityId":[6],"basicrelationships.localModelId":[11],"basicrelationships.modelId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"fields.entityId":[39,40],"foreigns.relatedEntityId":[7],"basicrelationships.localModelId":[14],"basicrelationships.modelId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{"fields.entityId":[41,42,43]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{"fields.entityId":[44,45],"foreigns.relatedEntityId":[8],"basicrelationships.localModelId":[16],"basicrelationships.modelId":[15]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{"fields.entityId":[46,47,48],"basicrelationships.localModelId":[18],"basicrelationships.modelId":[17],"foreigns.relatedEntityId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"fields.entityId":[49,50,51,52,53,54],"projects.authModelId":[2],"foreigns.relatedEntityId":[10],"basicrelationships.localModelId":[20],"basicrelationships.modelId":[19],"cruds.modelId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"fields.entityId":[55,56,57,58,59],"basicrelationships.modelId":[20,16,18,14],"basicrelationships.localModelId":[19,15,17,13],"cruds.modelId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_2":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Agendamento","type":"model","plural":"Agendamentos","pluralAndSingularAreSame":false,"table":"agendamentos","projectId":1,"top":"83px","left":"387px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_04_18_000001_create_agendamentos_table.php","foreignsMigrationName":"2023_04_18_009001_add_foreigns_to_agendamentos_table.php","generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":2,"createdAt":"2023-04-18 13:43:41","updatedAt":"2023-04-18 14:17:13"},"item_7":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Date","type":"model","plural":"Dates","pluralAndSingularAreSame":false,"table":"dates","projectId":1,"top":"556px","left":"581px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_04_18_000002_create_dates_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":7,"createdAt":"2023-04-18 13:53:14","updatedAt":"2023-04-18 14:17:12"},"item_6":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Funcionario","type":"model","plural":"Funcionarios","pluralAndSingularAreSame":false,"table":"funcionarios","projectId":1,"top":"85px","left":"766px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_04_18_000003_create_funcionarios_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":6,"createdAt":"2023-04-18 13:50:08","updatedAt":"2023-04-18 14:17:13"},"item_5":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Servico","type":"model","plural":"Servicos","pluralAndSingularAreSame":false,"table":"servicos","projectId":1,"top":"325px","left":"739px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_04_18_000004_create_servicos_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":5,"createdAt":"2023-04-18 13:47:07","updatedAt":"2023-04-18 14:17:13"},"item_4":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Unidade","type":"model","plural":"Unidades","pluralAndSingularAreSame":false,"table":"unidades","projectId":1,"top":"476px","left":"240px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"migrationName":"2023_04_18_000005_create_unidades_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":4,"createdAt":"2023-04-18 13:46:03","updatedAt":"2023-04-18 14:17:13"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"projectId":1,"name":"User","type":"model","table":"users","plural":"Users","top":"79px","left":"77px","pivot":false,"softDeletes":false,"timestamps":true,"needsCentralization":false,"pluralAndSingularAreSame":false,"migrationName":"2014_10_12_000000_create_users_table.php","foreignsMigrationName":null,"generatesMigration":true,"oldMigrationName":null,"oldForeignsMigrationName":null,"id":1,"createdAt":"2023-04-18 13:42:02","updatedAt":"2023-04-18 14:17:13"}},"fields":{"fields":{"count":42,"lastPrimaryKey":59,"index":{"1":{"hasMany":{"foreigns.relatedFieldId":[1],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"basicrelationships.parentKeyId":[2,1],"inputs.fieldId":[1]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{"inputs.fieldId":[2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{"inputs.fieldId":[3]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{"foreigns.fieldId":[1],"basicrelationships.foreignKeyId":[2,1],"inputs.fieldId":[4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{"foreigns.relatedFieldId":[4],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{"basicrelationships.parentKeyId":[8,7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"15":{"hasMany":{"foreigns.relatedFieldId":[3],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"16":{"hasMany":{"basicrelationships.parentKeyId":[6,5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"23":{"hasMany":{"foreigns.fieldId":[3],"basicrelationships.foreignKeyId":[6,5],"inputs.fieldId":[5]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"24":{"hasMany":{"foreigns.fieldId":[4],"basicrelationships.foreignKeyId":[8,7],"inputs.fieldId":[6]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"25":{"hasMany":{"foreigns.relatedFieldId":[],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"26":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"28":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"34":{"hasMany":{"foreigns.relatedFieldId":[6],"basicrelationships.parentKeyId":[]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"36":{"hasMany":{"basicrelationships.parentKeyId":[12,11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"38":{"hasMany":{"foreigns.fieldId":[6],"basicrelationships.foreignKeyId":[12,11],"inputs.fieldId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"39":{"hasMany":{"foreigns.relatedFieldId":[7]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"40":{"hasMany":{"basicrelationships.parentKeyId":[13,14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"41":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"42":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"43":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"44":{"hasMany":{"foreigns.relatedFieldId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"45":{"hasMany":{"basicrelationships.parentKeyId":[15,16]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"46":{"hasMany":{"foreigns.relatedFieldId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"47":{"hasMany":{"basicrelationships.parentKeyId":[17,18]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"48":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"49":{"hasMany":{"foreigns.relatedFieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"50":{"hasMany":{"basicrelationships.parentKeyId":[19,20],"inputs.fieldId":[12]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"51":{"hasMany":{"inputs.fieldId":[13]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"52":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"53":{"hasMany":{"inputs.fieldId":[14]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"54":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"55":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"56":{"hasMany":{"foreigns.fieldId":[10],"basicrelationships.foreignKeyId":[19,20],"inputs.fieldId":[11]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"57":{"hasMany":{"foreigns.fieldId":[8],"basicrelationships.foreignKeyId":[15,16],"inputs.fieldId":[9]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"58":{"hasMany":{"foreigns.fieldId":[9],"basicrelationships.foreignKeyId":[17,18],"inputs.fieldId":[10]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"59":{"hasMany":{"foreigns.fieldId":[7],"basicrelationships.foreignKeyId":[13,14],"inputs.fieldId":[8]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_7":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":2,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":7,"createdAt":"2023-04-18 13:43:41","updatedAt":"2023-04-18 13:43:41","order":0},"item_8":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"user_id","entityId":2,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":8,"createdAt":"2023-04-18 13:43:58","updatedAt":"2023-04-18 13:43:58","order":1},"item_23":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"servico_id","entityId":2,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":23,"createdAt":"2023-04-18 13:49:33","updatedAt":"2023-04-18 13:49:33","order":2},"item_24":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"unidade_id","entityId":2,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":24,"createdAt":"2023-04-18 13:49:42","updatedAt":"2023-04-18 13:49:42","order":3},"item_38":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"date_id","entityId":2,"type":"unsignedBigInteger","pk":false,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":38,"createdAt":"2023-04-18 13:54:30","updatedAt":"2023-04-18 13:54:30","order":4},"item_34":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":7,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":34,"createdAt":"2023-04-18 13:53:14","updatedAt":"2023-04-18 13:53:14","order":0},"item_36":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"time","entityId":7,"type":"dateTime","pk":false,"fk":false,"params":{},"faker":"$faker->dateTime()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":36,"createdAt":"2023-04-18 13:53:34","updatedAt":"2023-04-18 13:53:40"},"item_25":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":6,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":25,"createdAt":"2023-04-18 13:50:08","updatedAt":"2023-04-18 13:50:08","order":0},"item_26":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":6,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":26,"createdAt":"2023-04-18 13:50:18","updatedAt":"2023-04-18 13:50:20"},"item_28":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":6,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":28,"createdAt":"2023-04-18 13:51:07","updatedAt":"2023-04-18 13:51:10"},"item_15":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":5,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":15,"createdAt":"2023-04-18 13:47:07","updatedAt":"2023-04-18 13:47:07","order":0},"item_16":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":5,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":16,"createdAt":"2023-04-18 13:47:14","updatedAt":"2023-04-18 13:47:17"},"item_12":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":4,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":12,"createdAt":"2023-04-18 13:46:03","updatedAt":"2023-04-18 13:46:03","order":0},"item_13":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":4,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":1,"id":13,"createdAt":"2023-04-18 13:46:11","updatedAt":"2023-04-18 13:46:13"},"item_14":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"endereco","entityId":4,"type":"string","pk":false,"fk":false,"params":{"options":null},"faker":"$faker->text({SIZE})","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"order":2,"id":14,"createdAt":"2023-04-18 13:46:14","updatedAt":"2023-04-18 13:46:28"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"id","entityId":1,"type":"bigIncrements","pk":true,"fk":false,"params":{},"faker":"","nullable":false,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":1,"createdAt":"2023-04-18 13:42:02","updatedAt":"2023-04-18 13:42:03","order":0},"item_2":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"name","entityId":1,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->name()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":2,"createdAt":"2023-04-18 13:42:03","updatedAt":"2023-04-18 13:42:03","order":1},"item_3":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email","entityId":1,"type":"string","pk":false,"fk":false,"params":{},"faker":"$faker->unique->email()","nullable":false,"hidden":false,"fillable":true,"defaultValue":null,"index":false,"unique":true,"id":3,"createdAt":"2023-04-18 13:42:03","updatedAt":"2023-04-18 13:42:03","order":2},"item_4":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"email_verified_at","entityId":1,"type":"timestamp","pk":false,"fk":false,"params":{},"faker":"now()","nullable":true,"hidden":false,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":4,"createdAt":"2023-04-18 13:42:03","updatedAt":"2023-04-18 13:42:03","order":3},"item_5":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"password","entityId":1,"type":"string","pk":false,"fk":false,"params":{},"faker":"\\Hash::make('password')","nullable":false,"hidden":true,"fillable":true,"defaultValue":null,"index":false,"unique":false,"id":5,"createdAt":"2023-04-18 13:42:03","updatedAt":"2023-04-18 13:42:03","order":4},"item_6":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"remember_token","entityId":1,"type":"string","pk":false,"fk":false,"params":{"size":100},"faker":"Str::random(10)","nullable":true,"hidden":true,"fillable":false,"defaultValue":null,"index":false,"unique":false,"id":6,"createdAt":"2023-04-18 13:42:03","updatedAt":"2023-04-18 13:42:03","order":5}},"foreigns":{"foreigns":{"count":8,"lastPrimaryKey":10,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":8,"relatedEntityId":1,"relatedFieldId":1,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"agendamento_user_id_foreign","defaultIndexName":"agendamento_user_id_foreign","id":1,"createdAt":"2023-04-18 13:43:58","updatedAt":"2023-04-18 13:58:01"},"item_3":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":23,"relatedEntityId":5,"relatedFieldId":15,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"agendamento_servico_id_foreign","defaultIndexName":"agendamento_servico_id_foreign","id":3,"createdAt":"2023-04-18 13:49:33","updatedAt":"2023-04-18 13:58:01"},"item_4":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":24,"relatedEntityId":4,"relatedFieldId":12,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"agendamento_unidade_id_foreign","defaultIndexName":"agendamento_unidade_id_foreign","id":4,"createdAt":"2023-04-18 13:49:42","updatedAt":"2023-04-18 13:58:01"},"item_6":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"","fieldId":38,"relatedEntityId":7,"relatedFieldId":34,"basicRelationshipId":null,"on":"","onTableDelete":"CASCADE","onTableUpdate":"CASCADE","indexName":"agendamento_date_id_foreign","defaultIndexName":"agendamento_date_id_foreign","id":6,"createdAt":"2023-04-18 13:54:30","updatedAt":"2023-04-18 13:58:01"}},"inputs":{"inputs":{"count":14,"lastPrimaryKey":14,"index":{"1":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"3":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"4":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"5":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"6":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"7":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"8":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"9":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"10":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"11":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"12":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"13":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"14":{"hasMany":{},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":1,"fieldId":2,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"name","label":"Name","placeholder":"Name","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"text","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","max:255","string"],"updateValidation":["required","max:255","string"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":1,"createdAt":"2023-04-18 13:54:48","updatedAt":"2023-04-18 13:54:48"},"item_2":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":1,"fieldId":3,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"email","label":"Email","placeholder":"Email","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"email","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","unique:users,email","email"],"updateValidation":["required","unique:users,email","email"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":2,"createdAt":"2023-04-18 13:54:48","updatedAt":"2023-04-18 13:54:48"},"item_3":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":1,"fieldId":5,"relationshipId":null,"relationshipCollectionName":null,"foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":null,"name":"password","label":"Password","placeholder":"Password","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"password","checked":false,"max":255,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required"],"updateValidation":["nullable"],"onCreate":true,"onUpdate":true,"onShow":false,"onIndex":false,"onForms":true,"dependentSelectId":null,"id":3,"createdAt":"2023-04-18 13:54:48","updatedAt":"2023-04-18 13:54:48"},"item_4":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":2,"fieldId":8,"relationshipId":2,"relationshipCollectionName":"users","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"usersForSelect","name":"user_id","label":"User","placeholder":"User","order":1,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the User","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:users,id"],"updateValidation":["required","exists:users,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":4,"createdAt":"2023-04-18 13:54:57","updatedAt":"2023-04-18 13:54:57"},"item_5":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":2,"fieldId":23,"relationshipId":6,"relationshipCollectionName":"servicos","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"servicosForSelect","name":"servico_id","label":"Servico","placeholder":"Servico","order":2,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Servico","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:servicos,id"],"updateValidation":["required","exists:servicos,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":5,"createdAt":"2023-04-18 13:54:57","updatedAt":"2023-04-18 13:54:57"},"item_6":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":2,"fieldId":24,"relationshipId":8,"relationshipCollectionName":"unidades","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"unidadesForSelect","name":"unidade_id","label":"Unidade","placeholder":"Unidade","order":3,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Unidade","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:unidades,id"],"updateValidation":["required","exists:unidades,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":6,"createdAt":"2023-04-18 13:54:57","updatedAt":"2023-04-18 13:54:57"},"item_7":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"crudId":2,"fieldId":38,"relationshipId":12,"relationshipCollectionName":"dates","foreignId":null,"foreignCollectionName":null,"livewireSelectVariableName":"datesForSelect","name":"date_id","label":"Date","placeholder":"Date","order":4,"cols":12,"colsMedium":12,"colsLarge":12,"readOnly":false,"required":true,"defaultValue":null,"starterOptionText":"Please select the Date","isComputed":false,"computedFormula":null,"showComputedOnLivewireForm":false,"livewireInputReference":null,"type":"select","checked":false,"max":null,"min":null,"step":null,"items":[],"dependentSelectItems":{},"validation":["required","exists:dates,id"],"updateValidation":["required","exists:dates,id"],"onCreate":true,"onUpdate":true,"onShow":true,"onIndex":true,"onForms":true,"dependentSelectId":null,"id":7,"createdAt":"2023-04-18 13:54:57","updatedAt":"2023-04-18 13:54:57"}},"projects":{"projects":{"count":2,"lastPrimaryKey":2,"index":{"1":{"hasMany":{"entities.projectId":[7,6,5,4,1,2],"cruds.projectId":[1,2]},"hasOne":{},"belongsTo":{},"belongsToMany":{}},"2":{"hasMany":{"entities.projectId":[8,9,10,11,12,13],"cruds.projectId":[3,4]},"hasOne":{},"belongsTo":{},"belongsToMany":{}}},"additionalIndexes":{},"items":[],"relations":[],"reladbVersion":"0.3.1"},"item_1":{"__returnRelationsAutomatically":true,"__saveDataToStorage":true,"__onUpdateListener":null,"__customEventsEnabled":false,"name":"Barber","url":"http://localhost:8000","mode":"draft","folder":"C:\\Users\\vboxuser\\Desktop","authModelId":1,"tenancyModelId":null,"settings":{"cssFramework":"tailwind","theme":"default","uiTemplate":"breeze","mutateDatesToCarbon":true,"authModel":null,"massAssignment":"fillable","validationMode":"array","routesMode":"resource","viewsFormMode":"blade","modelsFolder":"/Models","policiesFolder":"/Policies","servicesFolder":"/Services","requestsFolder":"/Http/Requests","controllersFolder":"/Http/Controllers","apiControllersFolder":"/Http/Controllers/Api","viewsFolder":"/resources/views/app","controllerNameMode":"singular","schemaZoom":1,"schemaScrollTop":4584,"schemaScrollLeft":4589,"turbolinks":false,"modules":[]},"codeSettings":{"options":{"forceGeneration":false,"deleteRemovedModules":true},"base":{"migrations":true,"models":true,"policies":true,"factories":true,"seeders":true,"routes":true,"apiRoutes":true,"apiSanctumAuth":true},"cruds":{"1":{"crudId":1,"name":"Users","requests":true,"controller":true,"views":true,"tests":true,"api":true},"2":{"crudId":2,"name":"Agendamentos","requests":true,"controller":true,"views":true,"tests":true,"api":true}},"modules":{"permissionsApi":false,"permissions":false,"uiTemplate":true},"generationCommands":{"checkDependencies":true,"gitClone":true,"composerInstall":true,"storageLink":true,"npmInstall":true,"compileAssets":true},"runCommands":{"compileAssets":true,"migrate":true,"serve":true,"openBrowser":true}},"connection":{"type":"mysql","host":"127.0.0.1","port":3306,"database":"barber","username":"root","password":""},"modules":["auth","permissions","multiTenancy"],"version":"1.3.2","laravelVersion":10,"repositoryUrl":null,"repositoryBranch":null,"files":{".env":{"deleteOnGeneration":true,"content":"APP_NAME=\"Barber\"\nAPP_ENV=local\nAPP_KEY=base64:liOWWUWfvC5a6DBawtdPxpgcasEYYUbrhXGx7LtgK6E=\nAPP_DEBUG=true\nAPP_URL=http://localhost:8000\n\nLOG_CHANNEL=stack\nLOG_DEPRECATIONS_CHANNEL=null\nLOG_LEVEL=debug\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=barber\nDB_USERNAME=root\nDB_PASSWORD=\"\"\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\nMEMCACHED_HOST=127.0.0.1\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1025\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\nMAIL_ENCRYPTION=null\nMAIL_FROM_ADDRESS=\"hello@example.com\"\nMAIL_FROM_NAME=\"${APP_NAME}\"\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\nAWS_USE_PATH_STYLE_ENDPOINT=false\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_HOST=\nPUSHER_PORT=443\nPUSHER_SCHEME=https\nPUSHER_APP_CLUSTER=mt1\nVITE_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nVITE_PUSHER_HOST=\"${PUSHER_HOST}\"\nVITE_PUSHER_PORT=\"${PUSHER_PORT}\"\nVITE_PUSHER_SCHEME=\"${PUSHER_SCHEME}\"\nVITE_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n","module":"base","path":".env"},"\\app\\Providers\\AuthServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    /**\n     * The policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     */\n    protected $policies = [\n        // 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    /**\n     * Register any authentication / authorization services.\n     */\n    public function boot(): void\n    {\n        // Automatically finding the Policies\n        Gate::guessPolicyNamesUsing(function ($modelClass) {\n            return 'App\\\\Policies\\\\' . class_basename($modelClass) . 'Policy';\n        });\n\n        $this->registerPolicies();\n    }\n}\n","module":"base","path":"\\app\\Providers\\AuthServiceProvider.php"},"\\app\\Providers\\AppServiceProvider.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    /**\n     * Register any application services.\n     */\n    public function register(): void\n    {\n    }\n\n    /**\n     * Bootstrap any application services.\n     */\n    public function boot(): void\n    {\n        //\n    }\n}\n","module":"base","path":"\\app\\Providers\\AppServiceProvider.php"},"\\config\\auth.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'super_admins' => ['admin@admin.com'],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    */\n\n    'defaults' => [\n        'guard' => 'web',\n        'passwords' => 'users',\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    */\n\n    'guards' => [\n        'web' => [\n            'driver' => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver' => 'token',\n            'provider' => 'users',\n            'hash' => false,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model / table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    */\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model' => App\\Models\\User::class,\n        ],\n\n        // 'users' => [\n        //     'driver' => 'database',\n        //     'table' => 'users',\n        // ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    */\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table' => 'password_reset_tokens',\n            'expire' => 60,\n            'throttle' => 60,\n        ],\n    ],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Password Confirmation Timeout\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define the amount of seconds before a password confirmation\n    | times out and the user is prompted to re-enter their password via the\n    | confirmation screen. By default, the timeout lasts for three hours.\n    |\n    */\n\n    'password_timeout' => 10800,\n];\n","module":"base","path":"\\config\\auth.php"},"\\app\\Http\\Controllers\\Controller.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Routing\\Controller as BaseController;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Controller.php"},"\\app\\Http\\Requests\\UserStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => ['required', 'unique:users,email', 'email'],\n            'password' => ['required'],\n        ];\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Requests\\UserStoreRequest.php"},"\\app\\Http\\Requests\\UserUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass UserUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'max:255', 'string'],\n            'email' => [\n                'required',\n                Rule::unique('users', 'email')->ignore($this->user),\n                'email',\n            ],\n            'password' => ['nullable'],\n        ];\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Requests\\UserUpdateRequest.php"},"\\app\\Http\\Controllers\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse Illuminate\\View\\View;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view('app.users.index', compact('users', 'search'));\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', User::class);\n\n        return view('app.users.create');\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(UserStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, User $user): View\n    {\n        $this->authorize('view', $user);\n\n        return view('app.users.show', compact('user'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, User $user): View\n    {\n        $this->authorize('update', $user);\n\n        return view('app.users.edit', compact('user'));\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        UserUpdateRequest $request,\n        User $user\n    ): RedirectResponse {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return redirect()\n            ->route('users.edit', $user)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Request $request, User $user): RedirectResponse\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return redirect()\n            ->route('users.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\UserController.php"},"\\tests\\Feature\\Controllers\\UserControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_users(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('users.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.index')\n            ->assertViewHas('users');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_user(): void\n    {\n        $response = $this->get(route('users.create'));\n\n        $response->assertOk()->assertViewIs('app.users.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->post(route('users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $user = User::latest('id')->first();\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.show', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.show')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->get(route('users.edit', $user));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.users.edit')\n            ->assertViewHas('user');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->put(route('users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertRedirect(route('users.edit', $user));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->delete(route('users.destroy', $user));\n\n        $response->assertRedirect(route('users.index'));\n\n        $this->assertModelMissing($user);\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Controllers\\UserControllerTest.php"},"\\resources\\views\\app\\users\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('users.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\users\\create.blade.php"},"\\resources\\views\\app\\users\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('users.update', $user) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.users.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a href=\"{{ route('users.index') }}\" class=\"button\">\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a href=\"{{ route('users.create') }}\" class=\"button\">\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\users\\edit.blade.php"},"\\resources\\views\\app\\users\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($user) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.text\n            name=\"name\"\n            label=\"Name\"\n            :value=\"old('name', ($editing ? $user->name : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Name\"\n            required\n        ></x-inputs.text>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.email\n            name=\"email\"\n            label=\"Email\"\n            :value=\"old('email', ($editing ? $user->email : ''))\"\n            maxlength=\"255\"\n            placeholder=\"Email\"\n            required\n        ></x-inputs.email>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.password\n            name=\"password\"\n            label=\"Password\"\n            maxlength=\"255\"\n            placeholder=\"Password\"\n            :required=\"!$editing\"\n        ></x-inputs.password>\n    </x-inputs.group>\n</div>\n","module":"crud:1","path":"\\resources\\views\\app\\users\\form-inputs.blade.php"},"\\resources\\views\\app\\users\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('users.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.name')\n                        </h5>\n                        <span>{{ $user->name ?? '-' }}</span>\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.users.inputs.email')\n                        </h5>\n                        <span>{{ $user->email ?? '-' }}</span>\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('users.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\User::class)\n                    <a href=\"{{ route('users.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\users\\show.blade.php"},"\\resources\\views\\app\\users\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.users.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\User::class)\n                            <a\n                                href=\"{{ route('users.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.name')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.users.inputs.email')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($users as $user)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->name ?? '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ $user->email ?? '-' }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $user)\n                                        <a\n                                            href=\"{{ route('users.edit', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $user)\n                                        <a\n                                            href=\"{{ route('users.show', $user) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $user)\n                                        <form\n                                            action=\"{{ route('users.destroy', $user) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"3\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"3\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $users->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:1","path":"\\resources\\views\\app\\users\\index.blade.php"},"\\app\\Http\\Requests\\AgendamentoStoreRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AgendamentoStoreRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'exists:users,id'],\n            'servico_id' => ['required', 'exists:servicos,id'],\n            'unidade_id' => ['required', 'exists:unidades,id'],\n            'date_id' => ['required', 'exists:dates,id'],\n        ];\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Requests\\AgendamentoStoreRequest.php"},"\\app\\Http\\Requests\\AgendamentoUpdateRequest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass AgendamentoUpdateRequest extends FormRequest\n{\n    /**\n     * Determine if the user is authorized to make this request.\n     */\n    public function authorize(): bool\n    {\n        return true;\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     */\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required', 'exists:users,id'],\n            'servico_id' => ['required', 'exists:servicos,id'],\n            'unidade_id' => ['required', 'exists:unidades,id'],\n            'date_id' => ['required', 'exists:dates,id'],\n        ];\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Requests\\AgendamentoUpdateRequest.php"},"\\app\\Http\\Controllers\\AgendamentoController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Date;\nuse App\\Models\\Servico;\nuse App\\Models\\Unidade;\nuse Illuminate\\View\\View;\nuse App\\Models\\Agendamento;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\RedirectResponse;\nuse App\\Http\\Requests\\AgendamentoStoreRequest;\nuse App\\Http\\Requests\\AgendamentoUpdateRequest;\n\nclass AgendamentoController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index(Request $request): View\n    {\n        $this->authorize('view-any', Agendamento::class);\n\n        $search = $request->get('search', '');\n\n        $agendamentos = Agendamento::search($search)\n            ->latest()\n            ->paginate(5)\n            ->withQueryString();\n\n        return view(\n            'app.agendamentos.index',\n            compact('agendamentos', 'search')\n        );\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create(Request $request): View\n    {\n        $this->authorize('create', Agendamento::class);\n\n        $users = User::pluck('name', 'id');\n        $servicos = Servico::pluck('name', 'id');\n        $unidades = Unidade::pluck('name', 'id');\n        $dates = Date::pluck('id', 'id');\n\n        return view(\n            'app.agendamentos.create',\n            compact('users', 'servicos', 'unidades', 'dates')\n        );\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(AgendamentoStoreRequest $request): RedirectResponse\n    {\n        $this->authorize('create', Agendamento::class);\n\n        $validated = $request->validated();\n\n        $agendamento = Agendamento::create($validated);\n\n        return redirect()\n            ->route('agendamentos.edit', $agendamento)\n            ->withSuccess(__('crud.common.created'));\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Request $request, Agendamento $agendamento): View\n    {\n        $this->authorize('view', $agendamento);\n\n        return view('app.agendamentos.show', compact('agendamento'));\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Request $request, Agendamento $agendamento): View\n    {\n        $this->authorize('update', $agendamento);\n\n        $users = User::pluck('name', 'id');\n        $servicos = Servico::pluck('name', 'id');\n        $unidades = Unidade::pluck('name', 'id');\n        $dates = Date::pluck('id', 'id');\n\n        return view(\n            'app.agendamentos.edit',\n            compact('agendamento', 'users', 'servicos', 'unidades', 'dates')\n        );\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(\n        AgendamentoUpdateRequest $request,\n        Agendamento $agendamento\n    ): RedirectResponse {\n        $this->authorize('update', $agendamento);\n\n        $validated = $request->validated();\n\n        $agendamento->update($validated);\n\n        return redirect()\n            ->route('agendamentos.edit', $agendamento)\n            ->withSuccess(__('crud.common.saved'));\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(\n        Request $request,\n        Agendamento $agendamento\n    ): RedirectResponse {\n        $this->authorize('delete', $agendamento);\n\n        $agendamento->delete();\n\n        return redirect()\n            ->route('agendamentos.index')\n            ->withSuccess(__('crud.common.removed'));\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Controllers\\AgendamentoController.php"},"\\tests\\Feature\\Controllers\\AgendamentoControllerTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Controllers;\n\nuse App\\Models\\User;\nuse App\\Models\\Agendamento;\n\nuse App\\Models\\Date;\nuse App\\Models\\Servico;\nuse App\\Models\\Unidade;\n\nuse Tests\\TestCase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AgendamentoControllerTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $this->actingAs(\n            User::factory()->create(['email' => 'admin@admin.com'])\n        );\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_index_view_with_agendamentos(): void\n    {\n        $agendamentos = Agendamento::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->get(route('agendamentos.index'));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.agendamentos.index')\n            ->assertViewHas('agendamentos');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_create_view_for_agendamento(): void\n    {\n        $response = $this->get(route('agendamentos.create'));\n\n        $response->assertOk()->assertViewIs('app.agendamentos.create');\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_agendamento(): void\n    {\n        $data = Agendamento::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->post(route('agendamentos.store'), $data);\n\n        $this->assertDatabaseHas('agendamentos', $data);\n\n        $agendamento = Agendamento::latest('id')->first();\n\n        $response->assertRedirect(route('agendamentos.edit', $agendamento));\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_show_view_for_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $response = $this->get(route('agendamentos.show', $agendamento));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.agendamentos.show')\n            ->assertViewHas('agendamento');\n    }\n\n    /**\n     * @test\n     */\n    public function it_displays_edit_view_for_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $response = $this->get(route('agendamentos.edit', $agendamento));\n\n        $response\n            ->assertOk()\n            ->assertViewIs('app.agendamentos.edit')\n            ->assertViewHas('agendamento');\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $user = User::factory()->create();\n        $servico = Servico::factory()->create();\n        $unidade = Unidade::factory()->create();\n        $date = Date::factory()->create();\n\n        $data = [\n            'user_id' => $user->id,\n            'servico_id' => $servico->id,\n            'unidade_id' => $unidade->id,\n            'date_id' => $date->id,\n        ];\n\n        $response = $this->put(\n            route('agendamentos.update', $agendamento),\n            $data\n        );\n\n        $data['id'] = $agendamento->id;\n\n        $this->assertDatabaseHas('agendamentos', $data);\n\n        $response->assertRedirect(route('agendamentos.edit', $agendamento));\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $response = $this->delete(route('agendamentos.destroy', $agendamento));\n\n        $response->assertRedirect(route('agendamentos.index'));\n\n        $this->assertModelMissing($agendamento);\n    }\n}\n","module":"crud:2","path":"\\tests\\Feature\\Controllers\\AgendamentoControllerTest.php"},"\\resources\\views\\app\\agendamentos\\create.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.agendamentos.create_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('agendamentos.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"POST\"\n                    action=\"{{ route('agendamentos.store') }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.agendamentos.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('agendamentos.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.create')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\agendamentos\\create.blade.php"},"\\resources\\views\\app\\agendamentos\\edit.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.agendamentos.edit_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('agendamentos.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <x-form\n                    method=\"PUT\"\n                    action=\"{{ route('agendamentos.update', $agendamento) }}\"\n                    class=\"mt-4\"\n                >\n                    @include('app.agendamentos.form-inputs')\n\n                    <div class=\"mt-10\">\n                        <a\n                            href=\"{{ route('agendamentos.index') }}\"\n                            class=\"button\"\n                        >\n                            <i\n                                class=\"\n                                    mr-1\n                                    icon\n                                    ion-md-return-left\n                                    text-primary\n                                \"\n                            ></i>\n                            @lang('crud.common.back')\n                        </a>\n\n                        <a\n                            href=\"{{ route('agendamentos.create') }}\"\n                            class=\"button\"\n                        >\n                            <i class=\"mr-1 icon ion-md-add text-primary\"></i>\n                            @lang('crud.common.create')\n                        </a>\n\n                        <button\n                            type=\"submit\"\n                            class=\"button button-primary float-right\"\n                        >\n                            <i class=\"mr-1 icon ion-md-save\"></i>\n                            @lang('crud.common.update')\n                        </button>\n                    </div>\n                </x-form>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\agendamentos\\edit.blade.php"},"\\resources\\views\\app\\agendamentos\\form-inputs.blade.php":{"deleteOnGeneration":true,"content":"@php $editing = isset($agendamento) @endphp\n\n<div class=\"flex flex-wrap\">\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"user_id\" label=\"User\" required>\n            @php $selected = old('user_id', ($editing ? $agendamento->user_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the User</option>\n            @foreach($users as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"servico_id\" label=\"Servico\" required>\n            @php $selected = old('servico_id', ($editing ? $agendamento->servico_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Servico</option>\n            @foreach($servicos as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"unidade_id\" label=\"Unidade\" required>\n            @php $selected = old('unidade_id', ($editing ? $agendamento->unidade_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Unidade</option>\n            @foreach($unidades as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n\n    <x-inputs.group class=\"w-full\">\n        <x-inputs.select name=\"date_id\" label=\"Date\" required>\n            @php $selected = old('date_id', ($editing ? $agendamento->date_id : '')) @endphp\n            <option disabled {{ empty($selected) ? 'selected' : '' }}>Please select the Date</option>\n            @foreach($dates as $value => $label)\n            <option value=\"{{ $value }}\" {{ $selected == $value ? 'selected' : '' }} >{{ $label }}</option>\n            @endforeach\n        </x-inputs.select>\n    </x-inputs.group>\n</div>\n","module":"crud:2","path":"\\resources\\views\\app\\agendamentos\\form-inputs.blade.php"},"\\resources\\views\\app\\agendamentos\\show.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.agendamentos.show_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <x-slot name=\"title\">\n                    <a href=\"{{ route('agendamentos.index') }}\" class=\"mr-4\"\n                        ><i class=\"mr-1 icon ion-md-arrow-back\"></i\n                    ></a>\n                </x-slot>\n\n                <div class=\"mt-4 px-4\">\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.agendamentos.inputs.user_id')\n                        </h5>\n                        <span\n                            >{{ optional($agendamento->user)->name ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.agendamentos.inputs.servico_id')\n                        </h5>\n                        <span\n                            >{{ optional($agendamento->servico)->name ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.agendamentos.inputs.unidade_id')\n                        </h5>\n                        <span\n                            >{{ optional($agendamento->unidade)->name ?? '-'\n                            }}</span\n                        >\n                    </div>\n                    <div class=\"mb-4\">\n                        <h5 class=\"font-medium text-gray-700\">\n                            @lang('crud.agendamentos.inputs.date_id')\n                        </h5>\n                        <span\n                            >{{ optional($agendamento->date)->id ?? '-' }}</span\n                        >\n                    </div>\n                </div>\n\n                <div class=\"mt-10\">\n                    <a href=\"{{ route('agendamentos.index') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-return-left\"></i>\n                        @lang('crud.common.back')\n                    </a>\n\n                    @can('create', App\\Models\\Agendamento::class)\n                    <a href=\"{{ route('agendamentos.create') }}\" class=\"button\">\n                        <i class=\"mr-1 icon ion-md-add\"></i>\n                        @lang('crud.common.create')\n                    </a>\n                    @endcan\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\agendamentos\\show.blade.php"},"\\resources\\views\\app\\agendamentos\\index.blade.php":{"deleteOnGeneration":true,"content":"<x-app-layout>\n    <x-slot name=\"header\">\n        <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">\n            @lang('crud.agendamentos.index_title')\n        </h2>\n    </x-slot>\n\n    <div class=\"py-12\">\n        <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n            <x-partials.card>\n                <div class=\"mb-5 mt-4\">\n                    <div class=\"flex flex-wrap justify-between\">\n                        <div class=\"md:w-1/2\">\n                            <form>\n                                <div class=\"flex items-center w-full\">\n                                    <x-inputs.text\n                                        name=\"search\"\n                                        value=\"{{ $search ?? '' }}\"\n                                        placeholder=\"{{ __('crud.common.search') }}\"\n                                        autocomplete=\"off\"\n                                    ></x-inputs.text>\n\n                                    <div class=\"ml-1\">\n                                        <button\n                                            type=\"submit\"\n                                            class=\"button button-primary\"\n                                        >\n                                            <i class=\"icon ion-md-search\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"md:w-1/2 text-right\">\n                            @can('create', App\\Models\\Agendamento::class)\n                            <a\n                                href=\"{{ route('agendamentos.create') }}\"\n                                class=\"button button-primary\"\n                            >\n                                <i class=\"mr-1 icon ion-md-add\"></i>\n                                @lang('crud.common.create')\n                            </a>\n                            @endcan\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"block w-full overflow-auto scrolling-touch\">\n                    <table class=\"w-full max-w-full mb-4 bg-transparent\">\n                        <thead class=\"text-gray-700\">\n                            <tr>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.agendamentos.inputs.user_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.agendamentos.inputs.servico_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.agendamentos.inputs.unidade_id')\n                                </th>\n                                <th class=\"px-4 py-3 text-left\">\n                                    @lang('crud.agendamentos.inputs.date_id')\n                                </th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"text-gray-600\">\n                            @forelse($agendamentos as $agendamento)\n                            <tr class=\"hover:bg-gray-50\">\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($agendamento->user)->name ?? '-'\n                                    }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($agendamento->servico)->name ??\n                                    '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($agendamento->unidade)->name ??\n                                    '-' }}\n                                </td>\n                                <td class=\"px-4 py-3 text-left\">\n                                    {{ optional($agendamento->date)->id ?? '-'\n                                    }}\n                                </td>\n                                <td\n                                    class=\"px-4 py-3 text-center\"\n                                    style=\"width: 134px;\"\n                                >\n                                    <div\n                                        role=\"group\"\n                                        aria-label=\"Row Actions\"\n                                        class=\"\n                                            relative\n                                            inline-flex\n                                            align-middle\n                                        \"\n                                    >\n                                        @can('update', $agendamento)\n                                        <a\n                                            href=\"{{ route('agendamentos.edit', $agendamento) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"icon ion-md-create\"\n                                                ></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('view', $agendamento)\n                                        <a\n                                            href=\"{{ route('agendamentos.show', $agendamento) }}\"\n                                            class=\"mr-1\"\n                                        >\n                                            <button\n                                                type=\"button\"\n                                                class=\"button\"\n                                            >\n                                                <i class=\"icon ion-md-eye\"></i>\n                                            </button>\n                                        </a>\n                                        @endcan @can('delete', $agendamento)\n                                        <form\n                                            action=\"{{ route('agendamentos.destroy', $agendamento) }}\"\n                                            method=\"POST\"\n                                            onsubmit=\"return confirm('{{ __('crud.common.are_you_sure') }}')\"\n                                        >\n                                            @csrf @method('DELETE')\n                                            <button\n                                                type=\"submit\"\n                                                class=\"button\"\n                                            >\n                                                <i\n                                                    class=\"\n                                                        icon\n                                                        ion-md-trash\n                                                        text-red-600\n                                                    \"\n                                                ></i>\n                                            </button>\n                                        </form>\n                                        @endcan\n                                    </div>\n                                </td>\n                            </tr>\n                            @empty\n                            <tr>\n                                <td colspan=\"5\">\n                                    @lang('crud.common.no_items_found')\n                                </td>\n                            </tr>\n                            @endforelse\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td colspan=\"5\">\n                                    <div class=\"mt-10 px-4\">\n                                        {!! $agendamentos->render() !!}\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n            </x-partials.card>\n        </div>\n    </div>\n</x-app-layout>\n","module":"crud:2","path":"\\resources\\views\\app\\agendamentos\\index.blade.php"},"\\app\\Http\\Resources\\UserResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass UserResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:1","path":"\\app\\Http\\Resources\\UserResource.php"},"\\app\\Http\\Resources\\UserCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass UserCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:1","path":"\\app\\Http\\Resources\\UserCollection.php"},"\\app\\Http\\Controllers\\Api\\UserController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Resources\\UserResource;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Support\\Facades\\Hash;\nuse App\\Http\\Resources\\UserCollection;\nuse App\\Http\\Requests\\UserStoreRequest;\nuse App\\Http\\Requests\\UserUpdateRequest;\n\nclass UserController extends Controller\n{\n    public function index(Request $request): UserCollection\n    {\n        $this->authorize('view-any', User::class);\n\n        $search = $request->get('search', '');\n\n        $users = User::search($search)\n            ->latest()\n            ->paginate();\n\n        return new UserCollection($users);\n    }\n\n    public function store(UserStoreRequest $request): UserResource\n    {\n        $this->authorize('create', User::class);\n\n        $validated = $request->validated();\n\n        $validated['password'] = Hash::make($validated['password']);\n\n        $user = User::create($validated);\n\n        return new UserResource($user);\n    }\n\n    public function show(Request $request, User $user): UserResource\n    {\n        $this->authorize('view', $user);\n\n        return new UserResource($user);\n    }\n\n    public function update(UserUpdateRequest $request, User $user): UserResource\n    {\n        $this->authorize('update', $user);\n\n        $validated = $request->validated();\n\n        if (empty($validated['password'])) {\n            unset($validated['password']);\n        } else {\n            $validated['password'] = Hash::make($validated['password']);\n        }\n\n        $user->update($validated);\n\n        return new UserResource($user);\n    }\n\n    public function destroy(Request $request, User $user): Response\n    {\n        $this->authorize('delete', $user);\n\n        $user->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\UserController.php"},"\\tests\\Feature\\Api\\UserTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_users_list(): void\n    {\n        $users = User::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.users.index'));\n\n        $response->assertOk()->assertSee($users[0]->name);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user(): void\n    {\n        $data = User::factory()\n            ->make()\n            ->toArray();\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->postJson(route('api.users.store'), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $data = [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n        ];\n\n        $data['password'] = \\Str::random('8');\n\n        $response = $this->putJson(route('api.users.update', $user), $data);\n\n        unset($data['password']);\n        unset($data['email_verified_at']);\n\n        $data['id'] = $user->id;\n\n        $this->assertDatabaseHas('users', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_user(): void\n    {\n        $user = User::factory()->create();\n\n        $response = $this->deleteJson(route('api.users.destroy', $user));\n\n        $this->assertModelMissing($user);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\UserTest.php"},"\\app\\Http\\Resources\\AgendamentoResource.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass AgendamentoResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:2","path":"\\app\\Http\\Resources\\AgendamentoResource.php"},"\\app\\Http\\Resources\\AgendamentoCollection.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass AgendamentoCollection extends ResourceCollection\n{\n    /**\n     * Transform the resource collection into an array.\n     */\n    public function toArray(Request $request): array\n    {\n        return parent::toArray($request);\n    }\n}\n","module":"entity:2","path":"\\app\\Http\\Resources\\AgendamentoCollection.php"},"\\app\\Http\\Controllers\\Api\\UserAgendamentosController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AgendamentoResource;\nuse App\\Http\\Resources\\AgendamentoCollection;\n\nclass UserAgendamentosController extends Controller\n{\n    public function index(Request $request, User $user): AgendamentoCollection\n    {\n        $this->authorize('view', $user);\n\n        $search = $request->get('search', '');\n\n        $agendamentos = $user\n            ->agendamentos()\n            ->search($search)\n            ->latest()\n            ->paginate();\n\n        return new AgendamentoCollection($agendamentos);\n    }\n\n    public function store(Request $request, User $user): AgendamentoResource\n    {\n        $this->authorize('create', Agendamento::class);\n\n        $validated = $request->validate([\n            'servico_id' => ['required', 'exists:servicos,id'],\n            'unidade_id' => ['required', 'exists:unidades,id'],\n            'date_id' => ['required', 'exists:dates,id'],\n        ]);\n\n        $agendamento = $user->agendamentos()->create($validated);\n\n        return new AgendamentoResource($agendamento);\n    }\n}\n","module":"crud:1","path":"\\app\\Http\\Controllers\\Api\\UserAgendamentosController.php"},"\\tests\\Feature\\Api\\UserAgendamentosTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Agendamento;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass UserAgendamentosTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_user_agendamentos(): void\n    {\n        $user = User::factory()->create();\n        $agendamentos = Agendamento::factory()\n            ->count(2)\n            ->create([\n                'user_id' => $user->id,\n            ]);\n\n        $response = $this->getJson(\n            route('api.users.agendamentos.index', $user)\n        );\n\n        $response->assertOk()->assertSee($agendamentos[0]->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_user_agendamentos(): void\n    {\n        $user = User::factory()->create();\n        $data = Agendamento::factory()\n            ->make([\n                'user_id' => $user->id,\n            ])\n            ->toArray();\n\n        $response = $this->postJson(\n            route('api.users.agendamentos.store', $user),\n            $data\n        );\n\n        $this->assertDatabaseHas('agendamentos', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n\n        $agendamento = Agendamento::latest('id')->first();\n\n        $this->assertEquals($user->id, $agendamento->user_id);\n    }\n}\n","module":"crud:1","path":"\\tests\\Feature\\Api\\UserAgendamentosTest.php"},"\\app\\Http\\Controllers\\Api\\AgendamentoController.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\Agendamento;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Response;\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\AgendamentoResource;\nuse App\\Http\\Resources\\AgendamentoCollection;\nuse App\\Http\\Requests\\AgendamentoStoreRequest;\nuse App\\Http\\Requests\\AgendamentoUpdateRequest;\n\nclass AgendamentoController extends Controller\n{\n    public function index(Request $request): AgendamentoCollection\n    {\n        $this->authorize('view-any', Agendamento::class);\n\n        $search = $request->get('search', '');\n\n        $agendamentos = Agendamento::search($search)\n            ->latest()\n            ->paginate();\n\n        return new AgendamentoCollection($agendamentos);\n    }\n\n    public function store(AgendamentoStoreRequest $request): AgendamentoResource\n    {\n        $this->authorize('create', Agendamento::class);\n\n        $validated = $request->validated();\n\n        $agendamento = Agendamento::create($validated);\n\n        return new AgendamentoResource($agendamento);\n    }\n\n    public function show(\n        Request $request,\n        Agendamento $agendamento\n    ): AgendamentoResource {\n        $this->authorize('view', $agendamento);\n\n        return new AgendamentoResource($agendamento);\n    }\n\n    public function update(\n        AgendamentoUpdateRequest $request,\n        Agendamento $agendamento\n    ): AgendamentoResource {\n        $this->authorize('update', $agendamento);\n\n        $validated = $request->validated();\n\n        $agendamento->update($validated);\n\n        return new AgendamentoResource($agendamento);\n    }\n\n    public function destroy(\n        Request $request,\n        Agendamento $agendamento\n    ): Response {\n        $this->authorize('delete', $agendamento);\n\n        $agendamento->delete();\n\n        return response()->noContent();\n    }\n}\n","module":"crud:2","path":"\\app\\Http\\Controllers\\Api\\AgendamentoController.php"},"\\tests\\Feature\\Api\\AgendamentoTest.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Tests\\Feature\\Api;\n\nuse App\\Models\\User;\nuse App\\Models\\Agendamento;\n\nuse App\\Models\\Date;\nuse App\\Models\\Servico;\nuse App\\Models\\Unidade;\n\nuse Tests\\TestCase;\nuse Laravel\\Sanctum\\Sanctum;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass AgendamentoTest extends TestCase\n{\n    use RefreshDatabase, WithFaker;\n\n    protected function setUp(): void\n    {\n        parent::setUp();\n\n        $user = User::factory()->create(['email' => 'admin@admin.com']);\n\n        Sanctum::actingAs($user, [], 'web');\n\n        $this->withoutExceptionHandling();\n    }\n\n    /**\n     * @test\n     */\n    public function it_gets_agendamentos_list(): void\n    {\n        $agendamentos = Agendamento::factory()\n            ->count(5)\n            ->create();\n\n        $response = $this->getJson(route('api.agendamentos.index'));\n\n        $response->assertOk()->assertSee($agendamentos[0]->id);\n    }\n\n    /**\n     * @test\n     */\n    public function it_stores_the_agendamento(): void\n    {\n        $data = Agendamento::factory()\n            ->make()\n            ->toArray();\n\n        $response = $this->postJson(route('api.agendamentos.store'), $data);\n\n        $this->assertDatabaseHas('agendamentos', $data);\n\n        $response->assertStatus(201)->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_updates_the_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $user = User::factory()->create();\n        $servico = Servico::factory()->create();\n        $unidade = Unidade::factory()->create();\n        $date = Date::factory()->create();\n\n        $data = [\n            'user_id' => $user->id,\n            'servico_id' => $servico->id,\n            'unidade_id' => $unidade->id,\n            'date_id' => $date->id,\n        ];\n\n        $response = $this->putJson(\n            route('api.agendamentos.update', $agendamento),\n            $data\n        );\n\n        $data['id'] = $agendamento->id;\n\n        $this->assertDatabaseHas('agendamentos', $data);\n\n        $response->assertOk()->assertJsonFragment($data);\n    }\n\n    /**\n     * @test\n     */\n    public function it_deletes_the_agendamento(): void\n    {\n        $agendamento = Agendamento::factory()->create();\n\n        $response = $this->deleteJson(\n            route('api.agendamentos.destroy', $agendamento)\n        );\n\n        $this->assertModelMissing($agendamento);\n\n        $response->assertNoContent();\n    }\n}\n","module":"crud:2","path":"\\tests\\Feature\\Api\\AgendamentoTest.php"},"\\lang\\en\\crud.php":{"deleteOnGeneration":true,"content":"<?php\n\nreturn [\n    'common' => [\n        'actions' => 'Actions',\n        'create' => 'Create',\n        'edit' => 'Edit',\n        'update' => 'Update',\n        'new' => 'New',\n        'cancel' => 'Cancel',\n        'attach' => 'Attach',\n        'detach' => 'Detach',\n        'save' => 'Save',\n        'delete' => 'Delete',\n        'delete_selected' => 'Delete selected',\n        'search' => 'Search...',\n        'back' => 'Back to Index',\n        'are_you_sure' => 'Are you sure?',\n        'no_items_found' => 'No items found',\n        'created' => 'Successfully created',\n        'saved' => 'Saved successfully',\n        'removed' => 'Successfully removed',\n    ],\n\n    'users' => [\n        'name' => 'Users',\n        'index_title' => 'Users List',\n        'new_title' => 'New User',\n        'create_title' => 'Create User',\n        'edit_title' => 'Edit User',\n        'show_title' => 'Show User',\n        'inputs' => [\n            'name' => 'Name',\n            'email' => 'Email',\n            'password' => 'Password',\n        ],\n    ],\n\n    'agendamentos' => [\n        'name' => 'Agendamentos',\n        'index_title' => 'Agendamentos List',\n        'new_title' => 'New Agendamento',\n        'create_title' => 'Create Agendamento',\n        'edit_title' => 'Edit Agendamento',\n        'show_title' => 'Show Agendamento',\n        'inputs' => [\n            'user_id' => 'User',\n            'servico_id' => 'Servico',\n            'unidade_id' => 'Unidade',\n            'date_id' => 'Date',\n        ],\n    ],\n];\n","module":"base","path":"\\lang\\en\\crud.php"},"\\routes\\api.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\UserController;\nuse App\\Http\\Controllers\\Api\\AuthController;\nuse App\\Http\\Controllers\\Api\\AgendamentoController;\nuse App\\Http\\Controllers\\Api\\UserAgendamentosController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::post('/login', [AuthController::class, 'login'])->name('api.login');\n\nRoute::middleware('auth:sanctum')\n    ->get('/user', function (Request $request) {\n        return $request->user();\n    })\n    ->name('api.user');\n\nRoute::name('api.')\n    ->middleware('auth:sanctum')\n    ->group(function () {\n        Route::apiResource('users', UserController::class);\n\n        // User Agendamentos\n        Route::get('/users/{user}/agendamentos', [\n            UserAgendamentosController::class,\n            'index',\n        ])->name('users.agendamentos.index');\n        Route::post('/users/{user}/agendamentos', [\n            UserAgendamentosController::class,\n            'store',\n        ])->name('users.agendamentos.store');\n\n        Route::apiResource('agendamentos', AgendamentoController::class);\n    });\n","module":"base","path":"\\routes\\api.php"},"\\routes\\web.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\HomeController;\nuse App\\Http\\Controllers\\UserController;\nuse App\\Http\\Controllers\\ProfileController;\nuse App\\Http\\Controllers\\AgendamentoController;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n\nRoute::middleware(['auth'])\n    ->get('/dashboard', function () {\n        return view('dashboard');\n    })\n    ->name('dashboard');\n\nrequire __DIR__ . '/auth.php';\n\nRoute::middleware('auth')->group(function () {\n    Route::get('/profile', [ProfileController::class, 'edit'])->name(\n        'profile.edit'\n    );\n    Route::patch('/profile', [ProfileController::class, 'update'])->name(\n        'profile.update'\n    );\n    Route::delete('/profile', [ProfileController::class, 'destroy'])->name(\n        'profile.destroy'\n    );\n});\n\nRoute::prefix('/')\n    ->middleware('auth')\n    ->group(function () {\n        Route::resource('users', UserController::class);\n        Route::resource('agendamentos', AgendamentoController::class);\n    });\n","module":"base","path":"\\routes\\web.php"},"\\resources\\views\\components\\form-button.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'method' => 'POST',\r\n    'action'\r\n])\r\n\r\n<x-form method=\"{{ $method }}\" action=\"{{ $action }}\">\r\n    <div>\r\n        <button type=\"submit\" {{ $attributes }}>\r\n            {{ $slot }}\r\n        </button>\r\n    </div>\r\n</x-form>","module":"base","path":"\\resources\\views\\components\\form-button.blade.php"},"\\resources\\views\\components\\form.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'method' => 'POST',\r\n    'action',\r\n    'hasFiles' => false,\r\n    'model'\r\n])\r\n\r\n@php\r\n    $method = strtoupper($method);\r\n@endphp\r\n\r\n<form method=\"{{ $method !== 'GET' ? 'POST' : $method }}\" action=\"{{ $action }}\" {!! $hasFiles ? 'enctype=\"multipart/form-data\"' : '' !!} {{ $attributes }}>\r\n    @csrf\r\n    @if (!in_array($method, ['POST', 'GET']))\r\n        @method($method)\r\n    @endif\r\n    {{ $slot }}\r\n</form>","module":"base","path":"\\resources\\views\\components\\form.blade.php"},"\\resources\\views\\components\\inputs\\basic.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'type' => 'text',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<input\r\n    type=\"{{ $type }}\"\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    value=\"{{ old($name, $value ?? '') }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    {{ $min ? \"min={$min}\" : '' }}\r\n    {{ $max ? \"max={$max}\" : '' }}\r\n    {{ $step ? \"step={$step}\" : '' }}\r\n    autocomplete=\"off\"\r\n>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\basic.blade.php"},"\\resources\\views\\components\\inputs\\checkbox.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'id',\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'checked' => false,\r\n    'addHiddenValue' => true,\r\n    'hiddenValue' => 0,\r\n])\r\n\r\n@php\r\n    $checked = !! $checked\r\n@endphp\r\n\r\n<div class=\"relative block mb-2\">\r\n\r\n    {{-- Adds a hidden default value to be send if checked is false --}}\r\n    @if($addHiddenValue)\r\n    <input type=\"hidden\" id=\"{{  $id ?? $name }}-hidden\" name=\"{{ $name }}\" value=\"{{ $hiddenValue }}\">\r\n    @endif\r\n\r\n    <input\r\n        type=\"checkbox\"\r\n        id=\"{{ $id ?? $name }}\"\r\n        name=\"{{ $name }}\"\r\n        value=\"{{ $value ?? 1 }}\"\r\n        {{ $checked ? 'checked' : '' }}\r\n        {{ $attributes->merge(['class' => '']) }}\r\n    >\r\n\r\n    @if($label ?? null)\r\n        <label class=\"text-gray-700 pl-2\" for=\"{{ $id ?? $name }}\">\r\n            {{ $label }}\r\n        </label>\r\n    @endif\r\n</div>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\checkbox.blade.php"},"\\resources\\views\\components\\inputs\\date.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"date\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\date.blade.php"},"\\resources\\views\\components\\inputs\\datetime.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"datetime-local\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\datetime.blade.php"},"\\resources\\views\\components\\inputs\\email.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"email\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\email.blade.php"},"\\resources\\views\\components\\inputs\\group.blade.php":{"deleteOnGeneration":true,"content":"<div {{ $attributes->merge(['class' => 'px-4 my-2']) }}>\r\n    {{ $slot }}\r\n</div>","module":"base","path":"\\resources\\views\\components\\inputs\\group.blade.php"},"\\resources\\views\\components\\inputs\\hidden.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"hidden\" :name=\"$name\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\hidden.blade.php"},"\\resources\\views\\components\\inputs\\number.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n    'min' => null,\r\n    'max' => null,\r\n    'step' => null,\r\n])\r\n\r\n<x-inputs.basic type=\"number\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\" :min=\"$min\" :max=\"$max\" :step=\"$step\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\number.blade.php"},"\\resources\\views\\components\\inputs\\partials\\error.blade.php":{"deleteOnGeneration":true,"content":"<p class=\"text-red-600\" role=\"alert\">{{ $message }}</p>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\error.blade.php"},"\\resources\\views\\components\\inputs\\partials\\label.blade.php":{"deleteOnGeneration":true,"content":"<label class=\"{{ ($required ?? false) ? 'label label-required font-medium text-gray-700' : 'label font-medium text-gray-700' }}\" for=\"{{ $name }}\">\r\n    {{ $label }}\r\n</label>","module":"base","path":"\\resources\\views\\components\\inputs\\partials\\label.blade.php"},"\\resources\\views\\components\\inputs\\password.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value' => '',\r\n])\r\n\r\n<x-inputs.basic type=\"password\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\password.blade.php"},"\\resources\\views\\components\\inputs\\select.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'type' => 'text',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<select\r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    autocomplete=\"off\"\r\n>{{ $slot }}</select>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\select.blade.php"},"\\resources\\views\\components\\inputs\\text.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"text\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\text.blade.php"},"\\resources\\views\\components\\inputs\\textarea.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n])\r\n\r\n@if($label ?? null)\r\n    @include('components.inputs.partials.label')\r\n@endif\r\n\r\n<textarea \r\n    id=\"{{ $name }}\"\r\n    name=\"{{ $name }}\" \r\n    rows=\"3\"\r\n    {{ ($required ?? false) ? 'required' : '' }}\r\n    {{ $attributes->merge(['class' => 'block appearance-none w-full py-1 px-2 text-base leading-normal text-gray-800 border border-gray-200 rounded']) }}\r\n    autocomplete=\"off\"\r\n>{{$slot}}</textarea>\r\n\r\n@error($name)\r\n    @include('components.inputs.partials.error')\r\n@enderror","module":"base","path":"\\resources\\views\\components\\inputs\\textarea.blade.php"},"\\resources\\views\\components\\inputs\\url.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'name',\r\n    'label',\r\n    'value',\r\n])\r\n\r\n<x-inputs.basic type=\"url\" :name=\"$name\" label=\"{{ $label ?? ''}}\" :value=\"$value ?? ''\" :attributes=\"$attributes\"></x-inputs.basic>","module":"base","path":"\\resources\\views\\components\\inputs\\url.blade.php"},"\\resources\\views\\components\\dropdown-link.blade.php":{"deleteOnGeneration":true,"content":"<a {{ $attributes->merge(['class' => 'block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>\r\n","module":"base","path":"\\resources\\views\\components\\dropdown-link.blade.php"},"\\resources\\views\\components\\dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])\r\n\r\n@php\r\nswitch ($align) {\r\n    case 'left':\r\n        $alignmentClasses = 'origin-top-left left-0';\r\n        break;\r\n    case 'top':\r\n        $alignmentClasses = 'origin-top';\r\n        break;\r\n    case 'right':\r\n    default:\r\n        $alignmentClasses = 'origin-top-right right-0';\r\n        break;\r\n}\r\n\r\nswitch ($width) {\r\n    case '48':\r\n        $width = 'w-48';\r\n        break;\r\n}\r\n@endphp\r\n\r\n<div class=\"relative\" x-data=\"{ open: false }\" @click.outside=\"open = false\" @close.stop=\"open = false\">\r\n    <div @click=\"open = ! open\">\r\n        {{ $trigger }}\r\n    </div>\r\n\r\n    <div x-show=\"open\"\r\n            x-transition:enter=\"transition ease-out duration-200\"\r\n            x-transition:enter-start=\"transform opacity-0 scale-95\"\r\n            x-transition:enter-end=\"transform opacity-100 scale-100\"\r\n            x-transition:leave=\"transition ease-in duration-75\"\r\n            x-transition:leave-start=\"transform opacity-100 scale-100\"\r\n            x-transition:leave-end=\"transform opacity-0 scale-95\"\r\n            class=\"absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}\"\r\n            style=\"display: none;\"\r\n            @click=\"open = false\">\r\n        <div class=\"rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}\">\r\n            {{ $content }}\r\n        </div>\r\n    </div>\r\n</div>\r\n","module":"base","path":"\\resources\\views\\components\\dropdown.blade.php"},"\\resources\\views\\components\\modal.blade.php":{"deleteOnGeneration":true,"content":"{{-- This modal modal was copied from Jetstream components --}}\r\n\r\n@props(['id', 'maxWidth'])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\n$maxWidth = [\r\n    'sm' => 'sm:max-w-sm',\r\n    'md' => 'sm:max-w-md',\r\n    'lg' => 'sm:max-w-lg',\r\n    'xl' => 'sm:max-w-xl',\r\n    '2xl' => 'sm:max-w-2xl',\r\n][$maxWidth ?? '2xl'];\r\n@endphp\r\n\r\n<div\r\n    x-data=\"{\r\n        show: @entangle($attributes->wire('model')).defer,\r\n        focusables() {\r\n            // All focusable element types...\r\n            let selector = 'a, button, input:not([type=\\'hidden\\'], textarea, select, details, [tabindex]:not([tabindex=\\'-1\\'])'\r\n            return [...$el.querySelectorAll(selector)]\r\n                // All non-disabled elements...\r\n                .filter(el => ! el.hasAttribute('disabled'))\r\n        },\r\n        firstFocusable() { return this.focusables()[0] },\r\n        lastFocusable() { return this.focusables().slice(-1)[0] },\r\n        nextFocusable() { return this.focusables()[this.nextFocusableIndex()] || this.firstFocusable() },\r\n        prevFocusable() { return this.focusables()[this.prevFocusableIndex()] || this.lastFocusable() },\r\n        nextFocusableIndex() { return (this.focusables().indexOf(document.activeElement) + 1) % (this.focusables().length + 1) },\r\n        prevFocusableIndex() { return Math.max(0, this.focusables().indexOf(document.activeElement)) -1 },\r\n    }\"\r\n    x-init=\"$watch('show', value => {\r\n        if (value) {\r\n            document.body.classList.add('overflow-y-hidden');\r\n        } else {\r\n            document.body.classList.remove('overflow-y-hidden');\r\n        }\r\n    })\"\r\n    x-on:close.stop=\"show = false\"\r\n    x-on:keydown.escape.window=\"show = false\"\r\n    x-on:keydown.tab.prevent=\"$event.shiftKey || nextFocusable().focus()\"\r\n    x-on:keydown.shift.tab.prevent=\"prevFocusable().focus()\"\r\n    x-show=\"show\"\r\n    id=\"{{ $id }}\"\r\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\r\n    style=\"display: none;\"\r\n>\r\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0\"\r\n                    x-transition:enter-end=\"opacity-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100\"\r\n                    x-transition:leave-end=\"opacity-0\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n    </div>\r\n\r\n    <div x-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\r\n                    x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n                    x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\r\n                    x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>","module":"base","path":"\\resources\\views\\components\\modal.blade.php"},"\\resources\\views\\components\\nav-dropdown.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'title'\r\n])\r\n\r\n<div class=\"hidden sm:flex sm:items-center sm:ml-6\">\r\n    <x-dropdown align=\"right\" width=\"48\">\r\n        <x-slot name=\"trigger\">\r\n            <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\r\n                <div>{{ $title ?? '' }}</div>\r\n\r\n                <div class=\"ml-1\">\r\n                    <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n                        <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                    </svg>\r\n                </div>\r\n            </button>\r\n        </x-slot>\r\n\r\n        <x-slot name=\"content\">\r\n            {{ $slot }}\r\n        </x-slot>\r\n    </x-dropdown>\r\n</div>","module":"base","path":"\\resources\\views\\components\\nav-dropdown.blade.php"},"\\resources\\views\\components\\nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\r\n\r\n@php\r\n$classes = ($active ?? false)\r\n            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'\r\n            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';\r\n@endphp\r\n\r\n<a {{ $attributes->merge(['class' => $classes]) }}>\r\n    {{ $slot }}\r\n</a>\r\n","module":"base","path":"\\resources\\views\\components\\nav-link.blade.php"},"\\resources\\views\\components\\partials\\card.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'bodyClasses' => 'flex-auto p-6',\r\n])\r\n\r\n<div {{ $attributes->merge(['class' => 'relative flex flex-col rounded-lg bg-white break-words shadow-xl']) }}>\r\n    <div class=\"{{ $bodyClasses }}\">\r\n        \r\n        @if(isset($title))\r\n        <h4 class=\"text-lg font-bold mb-3\">\r\n            {{ $title }}\r\n        </h4>\r\n        @endif\r\n\r\n        @if(isset($subtitle))\r\n        <h5 class=\"text-gray-600 text-sm\">\r\n            {{ $subtitle }}\r\n        </h5>\r\n        @endif\r\n\r\n        {{ $slot }}\r\n    </div>\r\n</div>","module":"base","path":"\\resources\\views\\components\\partials\\card.blade.php"},"\\resources\\views\\components\\partials\\thumbnail.blade.php":{"deleteOnGeneration":true,"content":"@props([\r\n    'src',\r\n    'size' => 50,\r\n])\r\n\r\n@if($src)\r\n<img src=\"{{ $src }}\" class=\"object-cover rounded border border-gray-200\" style=\"width: {{ $size }}px; height: {{ $size }}px;\">\r\n@else\r\n<div class=\"border rounded border-gray-200 bg-gray-100\" style=\"width: {{ $size }}px; height: {{ $size }}px;\"></div>\r\n@endif","module":"base","path":"\\resources\\views\\components\\partials\\thumbnail.blade.php"},"\\resources\\views\\components\\responsive-nav-link.blade.php":{"deleteOnGeneration":true,"content":"@props(['active'])\r\n\r\n@php\r\n$classes = ($active ?? false)\r\n            ? 'block w-full pl-3 pr-4 py-2 border-l-4 border-indigo-400 text-left text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'\r\n            : 'block w-full pl-3 pr-4 py-2 border-l-4 border-transparent text-left text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';\r\n@endphp\r\n\r\n<a {{ $attributes->merge(['class' => $classes]) }}>\r\n    {{ $slot }}\r\n</a>\r\n","module":"base","path":"\\resources\\views\\components\\responsive-nav-link.blade.php"},"\\resources\\views\\layouts\\app.blade.php":{"deleteOnGeneration":true,"content":"<!DOCTYPE html>\r\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n        \r\n        <title>Barber</title>\r\n        \r\n        <!-- Fonts -->\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap\">\r\n        \r\n        <!-- Styles -->\r\n        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css\">\r\n        \r\n        <!-- Icons -->\r\n        <link href=\"https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css\" rel=\"stylesheet\">\r\n        \r\n        <!-- Scripts -->\r\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\r\n\r\n        \r\n        @livewireStyles\r\n    </head>\r\n\r\n    <body class=\"font-sans antialiased\">        \r\n        <div class=\"min-h-screen bg-gray-100\">\r\n            @include('layouts.navigation')\r\n        \r\n            <!-- Page Heading -->\r\n            <header class=\"bg-white shadow\">\r\n                <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                    {{ $header }}\r\n                </div>\r\n            </header>\r\n        \r\n            <!-- Page Content -->\r\n            <main>\r\n                {{ $slot }}\r\n            </main>\r\n        </div>\r\n\r\n        @stack('modals')\r\n        \r\n        @livewireScripts\r\n        \r\n        @stack('scripts')\r\n        \r\n        <script src=\"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js\"></script>\r\n        \r\n        @if (session()->has('success')) \r\n        <script>\r\n            var notyf = new Notyf({dismissible: true})\r\n            notyf.success('{{ session('success') }}')\r\n        </script> \r\n        @endif\r\n        \r\n        <script>\r\n            /* Simple Alpine Image Viewer */\r\n            document.addEventListener('alpine:init', () => {\r\n                Alpine.data('imageViewer', (src = '') => {\r\n                    return {\r\n                        imageUrl: src,\r\n        \r\n                        refreshUrl() {\r\n                            this.imageUrl = this.$el.getAttribute(\"image-url\")\r\n                        },\r\n        \r\n                        fileChosen(event) {\r\n                            this.fileToDataUrl(event, src => this.imageUrl = src)\r\n                        },\r\n        \r\n                        fileToDataUrl(event, callback) {\r\n                            if (! event.target.files.length) return\r\n        \r\n                            let file = event.target.files[0],\r\n                                reader = new FileReader()\r\n        \r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = e => callback(e.target.result)\r\n                        },\r\n                    }\r\n                })\r\n            })\r\n        </script>\r\n    </body>\r\n</html>\r\n","module":"base","path":"\\resources\\views\\layouts\\app.blade.php"},"\\resources\\views\\layouts\\navigation.blade.php":{"deleteOnGeneration":true,"content":"<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\r\n    <!-- Primary Navigation Menu -->\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div class=\"flex justify-between h-16\">\r\n            <div class=\"flex\">\r\n                <!-- Logo -->\r\n                <div class=\"shrink-0 flex items-center\">\r\n                    <a href=\"{{ route('dashboard') }}\">\r\n                        <x-application-logo class=\"block h-10 w-auto fill-current text-gray-600\" />\r\n                    </a>\r\n                </div>\r\n\r\n                <!-- Navigation Links -->\r\n                <div class=\"hidden space-x-8 sm:-my-px sm:ml-10 sm:flex\">\r\n                    <x-nav-link :href=\"route('dashboard')\" :active=\"request()->routeIs('dashboard')\">\r\n                        {{ __('Dashboard') }}\r\n                    </x-nav-link>\r\n                </div>\r\n\r\n                <x-nav-dropdown title=\"Apps\" align=\"right\" width=\"48\">\r\n                        @can('view-any', App\\Models\\User::class)\r\n                        <x-dropdown-link href=\"{{ route('users.index') }}\">\r\n                        Users\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                        @can('view-any', App\\Models\\Agendamento::class)\r\n                        <x-dropdown-link href=\"{{ route('agendamentos.index') }}\">\r\n                        Agendamentos\r\n                        </x-dropdown-link>\r\n                        @endcan\r\n                </x-nav-dropdown>\r\n\r\n            </div>\r\n\r\n            <!-- Settings Dropdown -->\r\n            <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\r\n                <x-dropdown align=\"right\" width=\"48\">\r\n                    <x-slot name=\"trigger\">\r\n                        <button class=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out\">\r\n                            <div>{{ Auth::user()->name }}</div>\r\n\r\n                            <div class=\"ml-1\">\r\n                                <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\r\n                                    <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\r\n                                </svg>\r\n                            </div>\r\n                        </button>\r\n                    </x-slot>\r\n\r\n                    <x-slot name=\"content\">\r\n                        <x-dropdown-link :href=\"route('profile.edit')\">\r\n                            {{ __('Profile') }}\r\n                        </x-dropdown-link>\r\n\r\n                        <!-- Authentication -->\r\n                        <form method=\"POST\" action=\"{{ route('logout') }}\">\r\n                            @csrf\r\n\r\n                            <x-dropdown-link :href=\"route('logout')\"\r\n                                    onclick=\"event.preventDefault();\r\n                                                this.closest('form').submit();\">\r\n                                {{ __('Log out') }}\r\n                            </x-dropdown-link>\r\n                        </form>\r\n                    </x-slot>\r\n                </x-dropdown>\r\n            </div>\r\n\r\n            <!-- Hamburger -->\r\n            <div class=\"-mr-2 flex items-center sm:hidden\">\r\n                <button @click=\"open = ! open\" class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\">\r\n                    <svg class=\"h-6 w-6\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path :class=\"{'hidden': open, 'inline-flex': ! open }\" class=\"inline-flex\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                        <path :class=\"{'hidden': ! open, 'inline-flex': open }\" class=\"hidden\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Responsive Navigation Menu -->\r\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\r\n        <div class=\"pt-2 pb-3 space-y-1\">\r\n            <x-responsive-nav-link :href=\"route('dashboard')\" :active=\"request()->routeIs('dashboard')\">\r\n                {{ __('Dashboard') }}\r\n            </x-responsive-nav-link>\r\n\r\n                @can('view-any', App\\Models\\User::class)\r\n                <x-responsive-nav-link href=\"{{ route('users.index') }}\">\r\n                Users\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n                @can('view-any', App\\Models\\Agendamento::class)\r\n                <x-responsive-nav-link href=\"{{ route('agendamentos.index') }}\">\r\n                Agendamentos\r\n                </x-responsive-nav-link>\r\n                @endcan\r\n\r\n        </div>\r\n\r\n        <!-- Responsive Settings Options -->\r\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\r\n            <div class=\"flex items-center px-4\">\r\n                <div class=\"shrink-0\">\r\n                    <svg class=\"h-10 w-10 fill-current text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div class=\"ml-3\">\r\n                    <div class=\"font-medium text-base text-gray-800\">{{ Auth::user()->name }}</div>\r\n                    <div class=\"font-medium text-sm text-gray-500\">{{ Auth::user()->email }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"mt-3 space-y-1\">\r\n                <x-dropdown-link :href=\"route('profile.edit')\">\r\n                    {{ __('Profile') }}\r\n                </x-dropdown-link>\r\n                \r\n                <!-- Authentication -->\r\n                <form method=\"POST\" action=\"{{ route('logout') }}\">\r\n                    @csrf\r\n\r\n                    <x-responsive-nav-link :href=\"route('logout')\"\r\n                            onclick=\"event.preventDefault();\r\n                                        this.closest('form').submit();\">\r\n                        {{ __('Log out') }}\r\n                    </x-responsive-nav-link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</nav>","module":"base","path":"\\resources\\views\\layouts\\navigation.blade.php"},"\\database\\factories\\AgendamentoFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Agendamento;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AgendamentoFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Agendamento::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'user_id' => \\App\\Models\\User::factory(),\n            'servico_id' => \\App\\Models\\Servico::factory(),\n            'unidade_id' => \\App\\Models\\Unidade::factory(),\n            'date_id' => \\App\\Models\\Date::factory(),\n        ];\n    }\n}\n","module":"entity:2","path":"\\database\\factories\\AgendamentoFactory.php"},"\\database\\factories\\DateFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Date;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass DateFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Date::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'time' => $this->faker->dateTime(),\n        ];\n    }\n}\n","module":"entity:7","path":"\\database\\factories\\DateFactory.php"},"\\database\\factories\\FuncionarioFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Funcionario;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass FuncionarioFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Funcionario::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->email(),\n        ];\n    }\n}\n","module":"entity:6","path":"\\database\\factories\\FuncionarioFactory.php"},"\\database\\factories\\ServicoFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Servico;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ServicoFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Servico::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n        ];\n    }\n}\n","module":"entity:5","path":"\\database\\factories\\ServicoFactory.php"},"\\database\\factories\\UnidadeFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Unidade;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UnidadeFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Unidade::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'endereco' => $this->faker->text(255),\n        ];\n    }\n}\n","module":"entity:4","path":"\\database\\factories\\UnidadeFactory.php"},"\\database\\factories\\UserFactory.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => $this->faker->name(),\n            'email' => $this->faker->unique->email(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n","module":"entity:1","path":"\\database\\factories\\UserFactory.php"},"\\database\\seeders\\AgendamentoSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Agendamento;\nuse Illuminate\\Database\\Seeder;\n\nclass AgendamentoSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Agendamento::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:2","path":"\\database\\seeders\\AgendamentoSeeder.php"},"\\database\\seeders\\DateSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Date;\nuse Illuminate\\Database\\Seeder;\n\nclass DateSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Date::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:7","path":"\\database\\seeders\\DateSeeder.php"},"\\database\\seeders\\FuncionarioSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Funcionario;\nuse Illuminate\\Database\\Seeder;\n\nclass FuncionarioSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Funcionario::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:6","path":"\\database\\seeders\\FuncionarioSeeder.php"},"\\database\\seeders\\ServicoSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Servico;\nuse Illuminate\\Database\\Seeder;\n\nclass ServicoSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Servico::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:5","path":"\\database\\seeders\\ServicoSeeder.php"},"\\database\\seeders\\UnidadeSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Unidade;\nuse Illuminate\\Database\\Seeder;\n\nclass UnidadeSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Unidade::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:4","path":"\\database\\seeders\\UnidadeSeeder.php"},"\\database\\seeders\\UserSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n","module":"entity:1","path":"\\database\\seeders\\UserSeeder.php"},"\\database\\seeders\\DatabaseSeeder.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        // Adding an admin user\n        $user = \\App\\Models\\User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(AgendamentoSeeder::class);\n        $this->call(DateSeeder::class);\n        $this->call(FuncionarioSeeder::class);\n        $this->call(ServicoSeeder::class);\n        $this->call(UnidadeSeeder::class);\n        $this->call(UserSeeder::class);\n    }\n}\n","module":"base","path":"\\database\\seeders\\DatabaseSeeder.php"},"\\app\\Policies\\AgendamentoPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Agendamento;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass AgendamentoPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the agendamento can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the agendamento can view the model.\n     */\n    public function view(User $user, Agendamento $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the agendamento can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the agendamento can update the model.\n     */\n    public function update(User $user, Agendamento $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the agendamento can delete the model.\n     */\n    public function delete(User $user, Agendamento $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the agendamento can restore the model.\n     */\n    public function restore(User $user, Agendamento $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the agendamento can permanently delete the model.\n     */\n    public function forceDelete(User $user, Agendamento $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:2","path":"\\app\\Policies\\AgendamentoPolicy.php"},"\\app\\Policies\\DatePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Date;\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass DatePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the date can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the date can view the model.\n     */\n    public function view(User $user, Date $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the date can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the date can update the model.\n     */\n    public function update(User $user, Date $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the date can delete the model.\n     */\n    public function delete(User $user, Date $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the date can restore the model.\n     */\n    public function restore(User $user, Date $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the date can permanently delete the model.\n     */\n    public function forceDelete(User $user, Date $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:7","path":"\\app\\Policies\\DatePolicy.php"},"\\app\\Policies\\FuncionarioPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Funcionario;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass FuncionarioPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the funcionario can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the funcionario can view the model.\n     */\n    public function view(User $user, Funcionario $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the funcionario can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the funcionario can update the model.\n     */\n    public function update(User $user, Funcionario $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the funcionario can delete the model.\n     */\n    public function delete(User $user, Funcionario $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the funcionario can restore the model.\n     */\n    public function restore(User $user, Funcionario $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the funcionario can permanently delete the model.\n     */\n    public function forceDelete(User $user, Funcionario $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:6","path":"\\app\\Policies\\FuncionarioPolicy.php"},"\\app\\Policies\\ServicoPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Servico;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass ServicoPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the servico can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the servico can view the model.\n     */\n    public function view(User $user, Servico $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the servico can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the servico can update the model.\n     */\n    public function update(User $user, Servico $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the servico can delete the model.\n     */\n    public function delete(User $user, Servico $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the servico can restore the model.\n     */\n    public function restore(User $user, Servico $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the servico can permanently delete the model.\n     */\n    public function forceDelete(User $user, Servico $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:5","path":"\\app\\Policies\\ServicoPolicy.php"},"\\app\\Policies\\UnidadePolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Unidade;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UnidadePolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the unidade can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the unidade can view the model.\n     */\n    public function view(User $user, Unidade $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the unidade can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the unidade can update the model.\n     */\n    public function update(User $user, Unidade $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the unidade can delete the model.\n     */\n    public function delete(User $user, Unidade $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the unidade can restore the model.\n     */\n    public function restore(User $user, Unidade $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the unidade can permanently delete the model.\n     */\n    public function forceDelete(User $user, Unidade $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:4","path":"\\app\\Policies\\UnidadePolicy.php"},"\\app\\Policies\\UserPolicy.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse Illuminate\\Auth\\Access\\HandlesAuthorization;\n\nclass UserPolicy\n{\n    use HandlesAuthorization;\n\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can delete multiple instances of the model.\n     */\n    public function deleteAny(User $user): bool\n    {\n        return $user->isSuperAdmin();\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return false;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return false;\n    }\n}\n","module":"entity:1","path":"\\app\\Policies\\UserPolicy.php"},"\\database\\migrations\\2023_04_18_000001_create_agendamentos_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('agendamentos', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->unsignedBigInteger('user_id');\n            $table->unsignedBigInteger('servico_id');\n            $table->unsignedBigInteger('unidade_id');\n            $table->unsignedBigInteger('date_id');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('agendamentos');\n    }\n};\n","module":"entity:2","path":"\\database\\migrations\\2023_04_18_000001_create_agendamentos_table.php"},"\\database\\migrations\\2023_04_18_000002_create_dates_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('dates', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->dateTime('time');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('dates');\n    }\n};\n","module":"entity:7","path":"\\database\\migrations\\2023_04_18_000002_create_dates_table.php"},"\\database\\migrations\\2023_04_18_000003_create_funcionarios_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('funcionarios', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('funcionarios');\n    }\n};\n","module":"entity:6","path":"\\database\\migrations\\2023_04_18_000003_create_funcionarios_table.php"},"\\database\\migrations\\2023_04_18_000004_create_servicos_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('servicos', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('servicos');\n    }\n};\n","module":"entity:5","path":"\\database\\migrations\\2023_04_18_000004_create_servicos_table.php"},"\\database\\migrations\\2023_04_18_000005_create_unidades_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('unidades', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('endereco');\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('unidades');\n    }\n};\n","module":"entity:4","path":"\\database\\migrations\\2023_04_18_000005_create_unidades_table.php"},"\\database\\migrations\\2014_10_12_000000_create_users_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name');\n            $table->string('email')->unique();\n            $table->timestamp('email_verified_at')->nullable();\n            $table->string('password');\n            $table->string('remember_token', 100)->nullable();\n\n            $table->timestamps();\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::dropIfExists('users');\n    }\n};\n","module":"entity:1","path":"\\database\\migrations\\2014_10_12_000000_create_users_table.php"},"\\database\\migrations\\2023_04_18_009001_add_foreigns_to_agendamentos_table.php":{"deleteOnGeneration":true,"content":"<?php\n\nuse Illuminate\\Support\\Facades\\Schema;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Database\\Migrations\\Migration;\n\nreturn new class extends Migration {\n    /**\n     * Run the migrations.\n     */\n    public function up(): void\n    {\n        Schema::table('agendamentos', function (Blueprint $table) {\n            $table\n                ->foreign('user_id')\n                ->references('id')\n                ->on('users')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('servico_id')\n                ->references('id')\n                ->on('servicos')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('unidade_id')\n                ->references('id')\n                ->on('unidades')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n\n            $table\n                ->foreign('date_id')\n                ->references('id')\n                ->on('dates')\n                ->onUpdate('CASCADE')\n                ->onDelete('CASCADE');\n        });\n    }\n\n    /**\n     * Reverse the migrations.\n     */\n    public function down(): void\n    {\n        Schema::table('agendamentos', function (Blueprint $table) {\n            $table->dropForeign(['user_id']);\n            $table->dropForeign(['servico_id']);\n            $table->dropForeign(['unidade_id']);\n            $table->dropForeign(['date_id']);\n        });\n    }\n};\n","module":"entity:2|entity:1|entity:5|entity:4|entity:7","path":"\\database\\migrations\\2023_04_18_009001_add_foreigns_to_agendamentos_table.php"},"\\app\\Models\\Agendamento.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Agendamento extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['user_id', 'servico_id', 'unidade_id', 'date_id'];\n\n    protected $searchableFields = ['*'];\n\n    public function user()\n    {\n        return $this->belongsTo(User::class, 'user_id', 'name');\n    }\n\n    public function servico()\n    {\n        return $this->belongsTo(Servico::class, 'servico_id', 'name');\n    }\n\n    public function unidade()\n    {\n        return $this->belongsTo(Unidade::class, 'unidade_id', 'name');\n    }\n\n    public function date()\n    {\n        return $this->belongsTo(Date::class, 'date_id', 'time');\n    }\n}\n","module":"entity:2","path":"\\app\\Models\\Agendamento.php"},"\\app\\Models\\Date.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Date extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['time'];\n\n    protected $searchableFields = ['*'];\n\n    protected $casts = [\n        'time' => 'datetime',\n    ];\n\n    public function agendamentos()\n    {\n        return $this->hasMany(Agendamento::class, 'date_id', 'time');\n    }\n}\n","module":"entity:7","path":"\\app\\Models\\Date.php"},"\\app\\Models\\Funcionario.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Funcionario extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['name', 'email'];\n\n    protected $searchableFields = ['*'];\n}\n","module":"entity:6","path":"\\app\\Models\\Funcionario.php"},"\\app\\Models\\Servico.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Servico extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['name'];\n\n    protected $searchableFields = ['*'];\n\n    public function agendamentos()\n    {\n        return $this->hasMany(Agendamento::class, 'servico_id', 'name');\n    }\n}\n","module":"entity:5","path":"\\app\\Models\\Servico.php"},"\\app\\Models\\Unidade.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n\nclass Unidade extends Model\n{\n    use HasFactory;\n    use Searchable;\n\n    protected $fillable = ['name', 'endereco'];\n\n    protected $searchableFields = ['*'];\n\n    public function agendamentos()\n    {\n        return $this->hasMany(Agendamento::class, 'unidade_id', 'name');\n    }\n}\n","module":"entity:4","path":"\\app\\Models\\Unidade.php"},"\\app\\Models\\User.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models;\n\nuse Laravel\\Sanctum\\HasApiTokens;\nuse App\\Models\\Scopes\\Searchable;\nuse Illuminate\\Notifications\\Notifiable;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\n\nclass User extends Authenticatable\n{\n    use Notifiable;\n    use HasFactory;\n    use Searchable;\n    use HasApiTokens;\n\n    protected $fillable = ['name', 'email', 'password'];\n\n    protected $searchableFields = ['*'];\n\n    protected $hidden = ['password', 'remember_token'];\n\n    protected $casts = [\n        'email_verified_at' => 'datetime',\n    ];\n\n    public function agendamentos()\n    {\n        return $this->hasMany(Agendamento::class, 'user_id', 'name');\n    }\n\n    public function isSuperAdmin(): bool\n    {\n        return in_array($this->email, config('auth.super_admins'));\n    }\n}\n","module":"entity:1","path":"\\app\\Models\\User.php"},"\\app\\Models\\Scopes\\Searchable.php":{"deleteOnGeneration":true,"content":"<?php\n\nnamespace App\\Models\\Scopes;\n\nuse Illuminate\\Database\\Eloquent\\Builder;\n\ntrait Searchable\n{\n    /**\n     * Search paginated items ordering by ID descending\n     */\n    public function scopeSearchLatestPaginated(\n        Builder $query,\n        string $search,\n        int $paginationQuantity = 10\n    ): Builder {\n        return $query\n            ->search($search)\n            ->orderBy('updated_at', 'desc')\n            ->paginate($paginationQuantity);\n    }\n\n    /**\n     * Adds a scope to search the table based on the\n     * $searchableFields array inside the model\n     */\n    public function scopeSearch(Builder $query, string $search): Builder\n    {\n        $query->where(function ($query) use ($search) {\n            foreach ($this->getSearchableFields() as $field) {\n                $query->orWhere($field, 'like', \"%{$search}%\");\n            }\n        });\n\n        return $query;\n    }\n\n    /**\n     * Returns the searchable fields. If $searchableFields is undefined,\n     * or is an empty array, or its first element is '*', it will search\n     * in all table fields\n     */\n    protected function getSearchableFields(): array\n    {\n        if (isset($this->searchableFields) && count($this->searchableFields)) {\n            return $this->searchableFields[0] === '*'\n                ? $this->getAllModelTableFields()\n                : $this->searchableFields;\n        }\n\n        return $this->getAllModelTableFields();\n    }\n\n    /**\n     * Gets all fields from Model's table\n     */\n    protected function getAllModelTableFields(): array\n    {\n        $tableName = $this->getTable();\n\n        return $this->getConnection()\n            ->getSchemaBuilder()\n            ->getColumnListing($tableName);\n    }\n}\n","module":"base","path":"\\app\\Models\\Scopes\\Searchable.php"},"\\app\\Http\\Controllers\\Api\\AuthController.php":{"deleteOnGeneration":true,"content":"<?php\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Models\\User;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\JsonResponse;\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Validation\\ValidationException;\n\nclass AuthController extends Controller\n{\n    public function login(Request $request): JsonResponse\n    {\n        $credentials = $request->validate([\n            'email' => 'required|email',\n            'password' => 'required',\n        ]);\n\n        if (!auth()->attempt($credentials)) {\n            throw ValidationException::withMessages([\n                'email' => [trans('auth.failed')],\n            ]);\n        }\n\n        $user = User::whereEmail($request->email)->firstOrFail();\n\n        $token = $user->createToken('auth-token');\n\n        return response()->json([\n            'token' => $token->plainTextToken,\n        ]);\n    }\n}\n","module":"base","path":"\\app\\Http\\Controllers\\Api\\AuthController.php"},"\\tailwind.config.js":{"deleteOnGeneration":true,"content":"module.exports = {\r\n  content: [\r\n    './resources/**/*.blade.php',\r\n    './resources/**/*.js',\r\n    './resources/**/*.vue',\r\n  ],\r\n  darkMode: false, // or 'media' or 'class'\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  variants: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n  ","module":"base","path":"\\tailwind.config.js"},"\\resources\\css\\app.css":{"deleteOnGeneration":true,"content":"@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\n.button {\r\n    @apply inline-flex items-center px-4 py-2 bg-gray-100 text-gray-800 border border-transparent rounded-md font-semibold text-xs tracking-widest transition ease-in-out duration-150 ring-gray-300;\r\n}\r\n\r\n.button:hover {\r\n    @apply bg-gray-200;\r\n}\r\n\r\n.button:active, .button:focus {\r\n    @apply bg-gray-300 ring;\r\n}\r\n\r\n.button.button-primary {\r\n    @apply bg-blue-500 text-white !important;\r\n}\r\n\r\n.button-primary:hover, .button.button-primary:active, .button.button-primary:focus {\r\n    @apply bg-blue-600 !important;\r\n}\r\n\r\n.button.button-primary:disabled {\r\n    @apply bg-blue-200 !important;\r\n}\r\n\r\n.button.button-danger {\r\n    @apply bg-red-500 text-white !important;\r\n}\r\n\r\n.button-danger:hover, .button.button-danger:active, .button.button-danger:focus {\r\n    @apply bg-red-600 !important;\r\n}\r\n\r\n.button.button-danger:disabled {\r\n    @apply bg-red-200 !important;\r\n}","module":"base","path":"\\resources\\css\\app.css"}},"skippedFiles":{},"removedModules":[],"migrationsDate":"2023_04_18","lastForeignAlias":0,"cascadeDeleteAsDefault":true,"cascadeUpdateAsDefault":true,"hasFixedForeignCallbacks":true,"hasFixedMigrations":true,"hasFixedHasManyDetailOnPageFields":true,"hasFixedLongForeignIndexName":true,"hasFixedEntityMigrationsGeneration":true,"pluginsData":{},"templatesData":{},"usesVite":true,"id":1,"createdAt":"2023-04-18 13:42:02","updatedAt":"2023-04-18 14:17:51"}},"manytomanycomponents":{},"hasmanydetails":{},"manytomanydetails":{},"dependentselects":{},"manytomanyrelationships":{},"morphrelationships":{},"hasmanythroughrelatioships":{},"comments":{}},"exportedItems":["projects:1"],"exportedRelationships":["Project:1:cruds","Crud:1:inputs","Crud:1:manyToManyComponents","Crud:1:hasManyDetails","Crud:1:manyToManyDetails","Crud:1:dependentSelects","Crud:2:inputs","Crud:2:manyToManyComponents","Crud:2:hasManyDetails","Crud:2:manyToManyDetails","Crud:2:dependentSelects","Project:1:entities","Entity:2:authProject","Entity:2:cruds","Entity:2:fields","Field:7:inputs","Field:7:foreign","Field:7:relatedForeigns","Field:7:basicParentRelationships","Field:7:basicForeignRelationships","Field:7:manyToManyModelRelationships","Field:7:manyToManylocalModelRelationships","Field:7:typedMorphRelationships","Field:7:identifiedMorphRelationships","Field:8:inputs","Field:8:foreign","Foreign:1:inputs","Field:8:relatedForeigns","Field:8:basicParentRelationships","Field:8:basicForeignRelationships","BasicRelationship:2:inputs","BasicRelationship:2:contrary","BasicRelationship:1:inputs","BasicRelationship:1:contrary","BasicRelationship:2:hasManyDetails","BasicRelationship:1:hasManyDetails","Field:8:manyToManyModelRelationships","Field:8:manyToManylocalModelRelationships","Field:8:typedMorphRelationships","Field:8:identifiedMorphRelationships","Field:23:inputs","Field:23:foreign","Foreign:3:inputs","Field:23:relatedForeigns","Field:23:basicParentRelationships","Field:23:basicForeignRelationships","BasicRelationship:6:inputs","BasicRelationship:6:contrary","BasicRelationship:5:inputs","BasicRelationship:5:contrary","BasicRelationship:6:hasManyDetails","BasicRelationship:5:hasManyDetails","Field:23:manyToManyModelRelationships","Field:23:manyToManylocalModelRelationships","Field:23:typedMorphRelationships","Field:23:identifiedMorphRelationships","Field:24:inputs","Field:24:foreign","Foreign:4:inputs","Field:24:relatedForeigns","Field:24:basicParentRelationships","Field:24:basicForeignRelationships","BasicRelationship:8:inputs","BasicRelationship:8:contrary","BasicRelationship:7:inputs","BasicRelationship:7:contrary","BasicRelationship:8:hasManyDetails","BasicRelationship:7:hasManyDetails","Field:24:manyToManyModelRelationships","Field:24:manyToManylocalModelRelationships","Field:24:typedMorphRelationships","Field:24:identifiedMorphRelationships","Field:38:inputs","Field:38:foreign","Foreign:6:inputs","Field:38:relatedForeigns","Field:38:basicParentRelationships","Field:38:basicForeignRelationships","BasicRelationship:12:inputs","BasicRelationship:12:contrary","BasicRelationship:11:inputs","BasicRelationship:11:contrary","BasicRelationship:12:hasManyDetails","BasicRelationship:11:hasManyDetails","Field:38:manyToManyModelRelationships","Field:38:manyToManylocalModelRelationships","Field:38:typedMorphRelationships","Field:38:identifiedMorphRelationships","Entity:2:foreigns","Entity:2:pivotRelationships","Entity:2:pivotMorphRelationships","Entity:2:basicRelationships","Entity:2:hasManyThroughRelationships","Entity:2:basicRelatedRelationships","Entity:2:manyToManyRelationships","Entity:2:manyToManyRelatedRelationships","Entity:2:morphRelationships","Entity:2:morphRelatedRelationships","Entity:7:authProject","Entity:7:cruds","Entity:7:fields","Field:34:inputs","Field:34:foreign","Field:34:relatedForeigns","Field:34:basicParentRelationships","Field:34:basicForeignRelationships","Field:34:manyToManyModelRelationships","Field:34:manyToManylocalModelRelationships","Field:34:typedMorphRelationships","Field:34:identifiedMorphRelationships","Field:36:inputs","Field:36:foreign","Field:36:relatedForeigns","Field:36:basicParentRelationships","Field:36:basicForeignRelationships","Field:36:manyToManyModelRelationships","Field:36:manyToManylocalModelRelationships","Field:36:typedMorphRelationships","Field:36:identifiedMorphRelationships","Entity:7:foreigns","Entity:7:pivotRelationships","Entity:7:pivotMorphRelationships","Entity:7:basicRelationships","Entity:7:hasManyThroughRelationships","Entity:7:basicRelatedRelationships","Entity:7:manyToManyRelationships","Entity:7:manyToManyRelatedRelationships","Entity:7:morphRelationships","Entity:7:morphRelatedRelationships","Entity:6:authProject","Entity:6:cruds","Entity:6:fields","Field:25:inputs","Field:25:foreign","Field:25:relatedForeigns","Field:25:basicParentRelationships","Field:25:basicForeignRelationships","Field:25:manyToManyModelRelationships","Field:25:manyToManylocalModelRelationships","Field:25:typedMorphRelationships","Field:25:identifiedMorphRelationships","Field:26:inputs","Field:26:foreign","Field:26:relatedForeigns","Field:26:basicParentRelationships","Field:26:basicForeignRelationships","Field:26:manyToManyModelRelationships","Field:26:manyToManylocalModelRelationships","Field:26:typedMorphRelationships","Field:26:identifiedMorphRelationships","Field:28:inputs","Field:28:foreign","Field:28:relatedForeigns","Field:28:basicParentRelationships","Field:28:basicForeignRelationships","Field:28:manyToManyModelRelationships","Field:28:manyToManylocalModelRelationships","Field:28:typedMorphRelationships","Field:28:identifiedMorphRelationships","Entity:6:foreigns","Entity:6:pivotRelationships","Entity:6:pivotMorphRelationships","Entity:6:basicRelationships","Entity:6:hasManyThroughRelationships","Entity:6:basicRelatedRelationships","Entity:6:manyToManyRelationships","Entity:6:manyToManyRelatedRelationships","Entity:6:morphRelationships","Entity:6:morphRelatedRelationships","Entity:5:authProject","Entity:5:cruds","Entity:5:fields","Field:15:inputs","Field:15:foreign","Field:15:relatedForeigns","Field:15:basicParentRelationships","Field:15:basicForeignRelationships","Field:15:manyToManyModelRelationships","Field:15:manyToManylocalModelRelationships","Field:15:typedMorphRelationships","Field:15:identifiedMorphRelationships","Field:16:inputs","Field:16:foreign","Field:16:relatedForeigns","Field:16:basicParentRelationships","Field:16:basicForeignRelationships","Field:16:manyToManyModelRelationships","Field:16:manyToManylocalModelRelationships","Field:16:typedMorphRelationships","Field:16:identifiedMorphRelationships","Entity:5:foreigns","Entity:5:pivotRelationships","Entity:5:pivotMorphRelationships","Entity:5:basicRelationships","Entity:5:hasManyThroughRelationships","Entity:5:basicRelatedRelationships","Entity:5:manyToManyRelationships","Entity:5:manyToManyRelatedRelationships","Entity:5:morphRelationships","Entity:5:morphRelatedRelationships","Entity:4:authProject","Entity:4:cruds","Entity:4:fields","Field:12:inputs","Field:12:foreign","Field:12:relatedForeigns","Field:12:basicParentRelationships","Field:12:basicForeignRelationships","Field:12:manyToManyModelRelationships","Field:12:manyToManylocalModelRelationships","Field:12:typedMorphRelationships","Field:12:identifiedMorphRelationships","Field:13:inputs","Field:13:foreign","Field:13:relatedForeigns","Field:13:basicParentRelationships","Field:13:basicForeignRelationships","Field:13:manyToManyModelRelationships","Field:13:manyToManylocalModelRelationships","Field:13:typedMorphRelationships","Field:13:identifiedMorphRelationships","Field:14:inputs","Field:14:foreign","Field:14:relatedForeigns","Field:14:basicParentRelationships","Field:14:basicForeignRelationships","Field:14:manyToManyModelRelationships","Field:14:manyToManylocalModelRelationships","Field:14:typedMorphRelationships","Field:14:identifiedMorphRelationships","Entity:4:foreigns","Entity:4:pivotRelationships","Entity:4:pivotMorphRelationships","Entity:4:basicRelationships","Entity:4:hasManyThroughRelationships","Entity:4:basicRelatedRelationships","Entity:4:manyToManyRelationships","Entity:4:manyToManyRelatedRelationships","Entity:4:morphRelationships","Entity:4:morphRelatedRelationships","Entity:1:authProject","Project:1:comments","Entity:1:cruds","Entity:1:fields","Field:1:inputs","Field:1:foreign","Field:1:relatedForeigns","Field:1:basicParentRelationships","Field:1:basicForeignRelationships","Field:1:manyToManyModelRelationships","Field:1:manyToManylocalModelRelationships","Field:1:typedMorphRelationships","Field:1:identifiedMorphRelationships","Field:2:inputs","Field:2:foreign","Field:2:relatedForeigns","Field:2:basicParentRelationships","Field:2:basicForeignRelationships","Field:2:manyToManyModelRelationships","Field:2:manyToManylocalModelRelationships","Field:2:typedMorphRelationships","Field:2:identifiedMorphRelationships","Field:3:inputs","Field:3:foreign","Field:3:relatedForeigns","Field:3:basicParentRelationships","Field:3:basicForeignRelationships","Field:3:manyToManyModelRelationships","Field:3:manyToManylocalModelRelationships","Field:3:typedMorphRelationships","Field:3:identifiedMorphRelationships","Field:4:inputs","Field:4:foreign","Field:4:relatedForeigns","Field:4:basicParentRelationships","Field:4:basicForeignRelationships","Field:4:manyToManyModelRelationships","Field:4:manyToManylocalModelRelationships","Field:4:typedMorphRelationships","Field:4:identifiedMorphRelationships","Field:5:inputs","Field:5:foreign","Field:5:relatedForeigns","Field:5:basicParentRelationships","Field:5:basicForeignRelationships","Field:5:manyToManyModelRelationships","Field:5:manyToManylocalModelRelationships","Field:5:typedMorphRelationships","Field:5:identifiedMorphRelationships","Field:6:inputs","Field:6:foreign","Field:6:relatedForeigns","Field:6:basicParentRelationships","Field:6:basicForeignRelationships","Field:6:manyToManyModelRelationships","Field:6:manyToManylocalModelRelationships","Field:6:typedMorphRelationships","Field:6:identifiedMorphRelationships","Entity:1:foreigns","Entity:1:pivotRelationships","Entity:1:pivotMorphRelationships","Entity:1:basicRelationships","Entity:1:hasManyThroughRelationships","Entity:1:basicRelatedRelationships","Entity:1:manyToManyRelationships","Entity:1:manyToManyRelatedRelationships","Entity:1:morphRelationships","Entity:1:morphRelatedRelationships"]}